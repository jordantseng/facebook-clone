{"version":3,"sources":["webpack:///src/app/feature-modules/posts/comments-section/comments-section.component.ts","webpack:///src/app/feature-modules/posts/comments-section/comments-section.component.html","webpack:///src/app/feature-modules/posts/create-post/create-post.component.ts","webpack:///src/app/feature-modules/posts/create-post/create-post.component.html","webpack:///src/app/feature-modules/posts/edit-post/edit-post.component.ts","webpack:///src/app/feature-modules/posts/edit-post/edit-post.component.html","webpack:///src/app/feature-modules/posts/likes-dialog/likes-dialog.component.ts","webpack:///src/app/feature-modules/posts/likes-dialog/likes-dialog.component.html","webpack:///src/app/feature-modules/posts/post-list-home/post-list-home.component.ts","webpack:///src/app/feature-modules/posts/post-list-home/post-list-home.component.html","webpack:///src/app/feature-modules/posts/post-list/post-list.component.ts","webpack:///src/app/feature-modules/posts/post-list/post-list.component.html","webpack:///src/app/feature-modules/posts/posts-routing.module.ts","webpack:///src/app/feature-modules/posts/posts.module.ts","webpack:///src/app/feature-modules/posts/posts.service.ts"],"names":["CommentsSectionComponent","fb","postsService","form","group","comment","commentId","deleteComment","post","_id","createComment","value","loggedinUser","get","setValue","onSubmitComment","selector","templateUrl","styleUrls","CreatePostComponent","route","router","authService","initialFormValue","title","content","image","user$","subscribe","userProfile","loggedInUser","createPost","navigate","relativeTo","queryParams","ts","Date","now","toString","queryParamsHandling","skipLocationChange","onCreatePost","EditPostComponent","errorService","errorSub","error$","error","errorMessage","message","authSub","user","paramMap","pipe","pm","postId","loading","fetchPost","postValue","updateMyPost","unsubscribe","LikesDialogComponent","dialogRef","data","getLikes","users","PostListHomeComponent","posts","page","pageSize","currentPage","totalData","totalPage","userSub","posts$","page$","queryParamMap","qp","fetchPosts","id","deleteMyPost","likePost","commentValue","e","pageIndex","onChangePage","PostListComponent","dialog","deleteClicked","commentDeleted","postLiked","alreadyLiked","likes","find","userId","length","comments","dialogConfig","open","emit","commentSection","routes","path","component","PostsRoutingModule","forChild","imports","exports","PostsModule","declarations","entryComponents","PostsService","http","url","getValue","next","postData","FormData","append","put","prevPosts","filter","res","getPosts","index","findIndex","prevLikes","push","patch","likeIndex","splice","formValue","p","prevComments","avatar","name","lastIndex","filteredComments","providedIn"],"mappings":"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","file":"default~feature-modules-posts-posts-module~feature-modules-profile-profile-module-es5.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { User } from 'src/app/interfaces/auth.model';\nimport { Comment, Post } from 'src/app/interfaces/post.model';\nimport { PostsService } from '../posts.service';\n\n@Component({\n  selector: 'app-comments-section',\n  templateUrl: './comments-section.component.html',\n  styleUrls: ['./comments-section.component.css'],\n})\nexport class CommentsSectionComponent implements OnInit {\n  @Input() comments: Comment[];\n  @Input() post: Post;\n  @Input() loggedinUser: User;\n\n  form: FormGroup;\n\n  constructor(private fb: FormBuilder, private postsService: PostsService) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({ comment: [''] });\n  }\n\n  onDeleteComment(commentId: string) {\n    this.postsService.deleteComment(this.post._id, commentId);\n  }\n\n  onSubmitComment() {\n    this.postsService.createComment(\n      this.form.value,\n      this.post._id,\n      this.loggedinUser\n    );\n\n    this.form.get('comment').setValue('');\n  }\n}\n","<mat-divider></mat-divider>\n<form\n  class=\"example-form\"\n  [formGroup]=\"form\"\n  (keydown.enter)=\"onSubmitComment()\"\n>\n  <app-input\n    [control]=\"form.get('comment')\"\n    label=\"Leave a comment\"\n  ></app-input>\n</form>\n\n<div *ngFor=\"let comment of comments\" style=\"padding: 1rem 0; display: flex\">\n  <img\n    style=\"display: block; margin-right: 1rem\"\n    mat-card-avatar\n    [src]=\"loggedinUser.avatar\"\n  />\n\n  <div style=\"flex: 3\">\n    <strong>{{ loggedinUser.name }}</strong>\n    <div>\n      {{ comment.content }}\n    </div>\n  </div>\n\n  <div>\n    <app-util-buttons *ngIf=\"loggedinUser._id === comment.user\" [post]=\"post\">\n      <button mat-menu-item color=\"warn\" (click)=\"onDeleteComment(comment._id)\">\n        Delete\n      </button>\n    </app-util-buttons>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/interfaces/auth.model';\n\nimport { PostsService } from '../posts.service';\nimport { AuthService } from 'src/app/feature-modules/auth/auth.service';\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css'],\n})\nexport class CreatePostComponent implements OnInit {\n  loggedInUser: User;\n  initialFormValue = {\n    title: '',\n    content: '',\n    image: '',\n  };\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private postsService: PostsService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.authService.user$.subscribe((userProfile) => {\n      this.loggedInUser = userProfile;\n    });\n  }\n\n  onCreatePost(post) {\n    this.postsService.createPost(post).subscribe(() => {\n      this.router.navigate(['./'], {\n        relativeTo: this.route,\n        queryParams: {\n          ts: Date.now().toString(),\n        },\n        queryParamsHandling: 'merge',\n        skipLocationChange: true,\n      });\n    });\n  }\n}\n","<app-post-form\n  [loggedInUser]=\"loggedInUser\"\n  [initialFormValue]=\"initialFormValue\"\n  (formSubmitted)=\"onCreatePost($event)\"\n></app-post-form>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\nimport { switchMap } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { User } from 'src/app/interfaces/auth.model';\n\nimport { PostsService } from '../posts.service';\nimport { AuthService } from 'src/app/feature-modules/auth/auth.service';\nimport { ErrorService } from 'src/app/error.service';\n\n@Component({\n  selector: 'app-edit-post',\n  templateUrl: './edit-post.component.html',\n  styleUrls: ['./edit-post.component.css'],\n})\nexport class EditPostComponent implements OnInit, OnDestroy {\n  loggedInUser: User;\n  initialFormValue = {\n    title: '',\n    content: '',\n    image: '',\n  };\n  postId: string;\n  loading: boolean;\n  errorMessage: string;\n  errorSub: Subscription;\n  authSub: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private postsService: PostsService,\n    private authService: AuthService,\n    private errorService: ErrorService\n  ) {}\n\n  ngOnInit(): void {\n    this.errorSub = this.errorService.error$.subscribe((error) => {\n      this.errorMessage = error.error.message;\n    });\n\n    this.authSub = this.authService.user$.subscribe((user) => {\n      this.loggedInUser = user;\n    });\n\n    this.route.paramMap\n      .pipe(\n        switchMap((pm: ParamMap) => {\n          this.postId = pm.get('id');\n\n          this.loading = true;\n          return this.postsService.fetchPost(this.postId);\n        })\n      )\n      .subscribe((postValue) => {\n        this.initialFormValue = postValue;\n\n        this.loading = false;\n      });\n  }\n\n  onEditPost(postValue) {\n    this.postsService.updateMyPost(this.postId, postValue).subscribe(() => {\n      this.router.navigate(['../../'], { relativeTo: this.route });\n    });\n  }\n\n  ngOnDestroy() {\n    this.errorSub.unsubscribe();\n    this.authSub.unsubscribe();\n  }\n}\n","<app-spinner *ngIf=\"loading\"></app-spinner>\n<app-error [errorMessage]=\"errorMessage\"></app-error>\n<app-post-form\n  *ngIf=\"!loading\"\n  [loggedInUser]=\"loggedInUser\"\n  [initialFormValue]=\"initialFormValue\"\n  (formSubmitted)=\"onEditPost($event)\"\n></app-post-form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { PostsService } from '../posts.service';\n\n@Component({\n  selector: 'app-likes-dialog',\n  templateUrl: './likes-dialog.component.html',\n  styleUrls: ['./likes-dialog.component.css'],\n})\nexport class LikesDialogComponent implements OnInit {\n  postId: string;\n  loading: boolean;\n  users: { _id: string; name: string; avatar: string }[];\n\n  constructor(\n    private dialogRef: MatDialogRef<LikesDialogComponent>,\n    private postsService: PostsService,\n    @Inject(MAT_DIALOG_DATA) data\n  ) {\n    this.postId = data.postId;\n  }\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.postsService.getLikes(this.postId).subscribe((users) => {\n      this.loading = false;\n      this.users = users;\n    });\n  }\n}\n","<app-spinner *ngIf=\"loading\"></app-spinner>\n<ng-container *ngIf=\"!loading\">\n  <div\n    *ngFor=\"let user of users\"\n    mat-dialog-content\n    style=\"display: flex; margin-top: 0.5rem\"\n  >\n    <img\n      style=\"display: block; margin-right: 1rem\"\n      mat-card-avatar\n      [src]=\"user.avatar\"\n    />\n\n    <div style=\"margin: auto 0\">\n      <strong>{{ user.name }}</strong>\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { User } from 'src/app/interfaces/auth.model';\nimport { Page } from 'src/app/interfaces/page.model';\nimport { Post } from 'src/app/interfaces/post.model';\n\nimport { PostsService } from '../posts.service';\nimport { AuthService } from 'src/app/feature-modules/auth/auth.service';\nimport { ErrorService } from 'src/app/error.service';\n\n@Component({\n  selector: 'app-post-list-home',\n  templateUrl: './post-list-home.component.html',\n  styleUrls: ['./post-list-home.component.css'],\n})\nexport class PostListHomeComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n  page: Page = {\n    pageSize: 3,\n    currentPage: 1,\n    totalData: 0,\n    totalPage: 0,\n  };\n\n  loading: boolean;\n  loggedinUser: User;\n  errorMessage: string;\n\n  private userSub: Subscription;\n  private errorSub: Subscription;\n\n  constructor(\n    private postsService: PostsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private errorService: ErrorService\n  ) {}\n\n  ngOnInit(): void {\n    this.userSub = this.authService.user$.subscribe((user) => {\n      this.loggedinUser = user;\n    });\n\n    this.errorSub = this.errorService.error$.subscribe((error) => {\n      this.loading = false;\n      this.errorMessage = error.error.message;\n    });\n\n    this.postsService.posts$.subscribe((posts) => {\n      this.loading = false;\n      this.posts = posts;\n    });\n\n    this.postsService.page$.subscribe((page) => {\n      this.loading = false;\n      this.page = page;\n    });\n\n    this.route.queryParamMap.subscribe((qp: ParamMap) => {\n      const currentPage = +qp.get('page') || this.page.currentPage;\n      const pageSize = +qp.get('pageSize') || this.page.pageSize;\n      this.loading = true;\n      this.postsService.fetchPosts(currentPage, pageSize);\n    });\n  }\n\n  onDeletePost(id: string) {\n    this.loading = true;\n    this.postsService.deleteMyPost(id);\n  }\n\n  onClickLike({ postId }) {\n    this.postsService.likePost(postId, this.loggedinUser._id);\n  }\n\n  onCommentSubmit({ commentValue, postId }) {\n    this.postsService.createComment(commentValue, postId, this.loggedinUser);\n  }\n\n  onChangePage(e: PageEvent) {\n    this.router.navigate(['./'], {\n      relativeTo: this.route,\n      queryParams: {\n        page: e.pageIndex + 1,\n        pageSize: e.pageSize,\n      },\n    });\n  }\n\n  ngOnDestroy() {\n    this.userSub.unsubscribe();\n    this.errorSub.unsubscribe();\n  }\n}\n","<app-spinner *ngIf=\"loading\"></app-spinner>\n<ng-container *ngIf=\"loggedinUser && !loading\">\n  <app-error *ngIf=\"errorMessage\" [errorMessage]=\"errorMessage\"></app-error>\n  <app-create-post></app-create-post>\n  <app-post-list\n    [posts]=\"posts\"\n    [loggedinUser]=\"loggedinUser\"\n    (deleteClicked)=\"onDeletePost($event)\"\n    (commentSubmitted)=\"onCommentSubmit($event)\"\n    (postLiked)=\"onClickLike($event)\"\n  ></app-post-list>\n</ng-container>\n<mat-paginator\n  [length]=\"page?.totalData\"\n  [pageSize]=\"page?.pageSize\"\n  [pageSizeOptions]=\"[1, 3, 5]\"\n  (page)=\"onChangePage($event)\"\n>\n</mat-paginator>\n\n<p class=\"mat-body-1 info-text\" *ngIf=\"posts.length <= 0 && !loading\">\n  No posts added yet.\n</p>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\nimport { User } from 'src/app/interfaces/auth.model';\nimport { Post } from 'src/app/interfaces/post.model';\nimport { LikesDialogComponent } from '../likes-dialog/likes-dialog.component';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css'],\n})\nexport class PostListComponent implements OnInit {\n  @Input() posts: Post[];\n  @Input() loggedinUser: User;\n  @Output() deleteClicked = new EventEmitter<string>();\n  @Output() commentDeleted = new EventEmitter<{\n    postId: string;\n    commentId: string;\n  }>();\n  @Output() postLiked = new EventEmitter<{ postId: string }>();\n\n  commentSection: string;\n\n  constructor(private dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  renderLikes(post) {\n    const alreadyLiked = post.likes.find(\n      (userId) => userId === this.loggedinUser._id\n    );\n\n    if (alreadyLiked) {\n      if (post.likes.length === 1) {\n        return `You like this post`;\n      }\n      return `You and other ${post.likes.length - 1} people like this post`;\n    } else {\n      if (post.likes.length === 0) {\n        return null;\n      }\n      return `${post.likes.length} people like this post`;\n    }\n  }\n\n  renderLikeButton(likes) {\n    return likes.find((id) => id === this.loggedinUser._id)\n      ? 'favorite'\n      : 'favorite_border';\n  }\n\n  renderCommentButton(comments) {\n    if (comments.length > 0) {\n      return `${comments.length} comments`;\n    }\n\n    if (comments.length <= 0) {\n      return 'COMMENT';\n    }\n  }\n\n  openLikesDialog(post) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = { postId: post._id };\n    this.dialog.open(LikesDialogComponent, dialogConfig);\n  }\n\n  onLikeClick(postId: string) {\n    this.postLiked.emit({ postId });\n  }\n\n  onCommentButtonClick(postId: string) {\n    if (this.commentSection !== postId) {\n      this.commentSection = postId;\n    } else {\n      this.commentSection = '';\n    }\n  }\n\n  onDeleteClick(id: string) {\n    this.deleteClicked.emit(id);\n  }\n\n  onDeleteComment(postId: string, commentId: string) {\n    this.commentDeleted.emit({ postId, commentId });\n  }\n}\n","<div *ngFor=\"let post of posts\" class=\"container\">\n  <mat-card>\n    <mat-card-header>\n      <img mat-card-avatar [src]=\"post.user.avatar\" />\n      <mat-card-title>{{ post.user.name }}</mat-card-title>\n      <mat-card-subtitle>{{ post.createdAt | date }}</mat-card-subtitle>\n\n      <app-util-buttons\n        *ngIf=\"loggedinUser._id === post.user._id\"\n        [post]=\"post\"\n      >\n        <a\n          mat-menu-item\n          [routerLink]=\"['./', post._id, 'edit']\"\n          routerLinkActive=\"router-link-active\"\n        >\n          Edit\n        </a>\n        <button mat-menu-item color=\"warn\" (click)=\"onDeleteClick(post._id)\">\n          Delete\n        </button>\n      </app-util-buttons>\n    </mat-card-header>\n\n    <mat-card-content>\n      <h3>{{ post.title }}</h3>\n      <p>\n        {{ post.content }}\n      </p>\n      <div *ngIf=\"post.image\" class=\"image-container\">\n        <img [src]=\"post.image\" [alt]=\"post.title\" mat-card-image />\n      </div>\n    </mat-card-content>\n\n    <mat-card-actions align=\"end\" style=\"margin-bottom: 0\">\n      <div style=\"margin-right: auto\">\n        <button mat-button (click)=\"openLikesDialog(post)\">\n          {{ renderLikes(post) }}\n        </button>\n      </div>\n      <div>\n        <button mat-button (click)=\"onCommentButtonClick(post._id)\">\n          {{ renderCommentButton(post.comments) }}\n        </button>\n        <button mat-button (click)=\"onLikeClick(post._id)\">\n          <mat-icon color=\"warn\">{{ renderLikeButton(post.likes) }}</mat-icon>\n          LIKE\n        </button>\n      </div>\n    </mat-card-actions>\n\n    <app-comments-section\n      *ngIf=\"commentSection === post._id\"\n      [comments]=\"post.comments\"\n      [loggedinUser]=\"loggedinUser\"\n      [post]=\"post\"\n    ></app-comments-section>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPostComponent } from './edit-post/edit-post.component';\nimport { PostListHomeComponent } from './post-list-home/post-list-home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostListHomeComponent,\n  },\n  { path: ':id/edit', component: EditPostComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n\n  exports: [RouterModule],\n})\nexport class PostsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { PostsRoutingModule } from './posts-routing.module';\nimport { AngularMaterialModule } from 'src/app/angular-material.module';\nimport { SharedModule } from 'src/app/shared-module/shared.module';\n\nimport { CreatePostComponent } from './create-post/create-post.component';\nimport { PostListComponent } from './post-list/post-list.component';\nimport { EditPostComponent } from './edit-post/edit-post.component';\nimport { PostListHomeComponent } from './post-list-home/post-list-home.component';\nimport { CommentsSectionComponent } from './comments-section/comments-section.component';\nimport { LikesDialogComponent } from './likes-dialog/likes-dialog.component';\n\n@NgModule({\n  declarations: [\n    CreatePostComponent,\n    PostListComponent,\n    EditPostComponent,\n    PostListHomeComponent,\n    CommentsSectionComponent,\n    LikesDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    PostsRoutingModule,\n    AngularMaterialModule,\n    ReactiveFormsModule,\n    SharedModule,\n  ],\n  exports: [PostsRoutingModule, CreatePostComponent, PostListComponent],\n  entryComponents: [LikesDialogComponent],\n})\nexport class PostsModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Post, Comment } from 'src/app/interfaces/post.model';\nimport { Page } from '../../interfaces/page.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostsService {\n  private readonly url = '/api/posts';\n  token: string;\n\n  posts$: BehaviorSubject<Post[]> = new BehaviorSubject([]);\n  page$: BehaviorSubject<Page> = new BehaviorSubject({\n    pageSize: 3,\n    currentPage: 1,\n    totalData: 0,\n    totalPage: 0,\n  });\n\n  constructor(private http: HttpClient) {}\n\n  private getPosts() {\n    return this.posts$.getValue();\n  }\n\n  fetchMyPosts() {\n    this.http\n      .get<{ data: Post[] }>(`${this.url}/me`)\n      .subscribe(({ data: posts }) => {\n        this.posts$.next(posts);\n      });\n  }\n\n  updateMyPost(postId: string, post: Post) {\n    let postData: Post | FormData;\n\n    if (typeof post.image === 'string') {\n      postData = post;\n    }\n\n    if (typeof post.image === 'object') {\n      postData = new FormData();\n\n      postData.append('title', post.title);\n      postData.append('content', post.content);\n      postData.append('image', post.image);\n    }\n\n    return this.http.put(`${this.url}/${postId}/me`, postData);\n  }\n\n  deleteMyPost(id: string) {\n    // optimistic update\n    const prevPosts = this.posts$.getValue();\n\n    this.posts$.next(this.posts$.getValue().filter((post) => post._id !== id));\n\n    this.http.delete<Post>(`${this.url}/${id}/me`).subscribe(\n      () => {},\n      (error) => {\n        this.posts$.next(prevPosts);\n      }\n    );\n  }\n\n  createPost(post) {\n    const postData = new FormData();\n    postData.append('title', post.title);\n    postData.append('content', post.content);\n    postData.append('image', post.image);\n\n    return this.http.post<Post>(this.url, postData);\n  }\n\n  fetchPost(id: string) {\n    return this.http.get<Post>(`${this.url}/${id}`);\n  }\n\n  deletePost(postId: string) {\n    return this.http.delete<Post>(`${this.url}/${postId}`);\n  }\n\n  fetchPosts(page: number, pageSize: number) {\n    this.http\n      .get<{ data: Post[]; page: Page }>(\n        `${this.url}?page=${page}&pageSize=${pageSize}`\n      )\n      .subscribe((res) => {\n        this.posts$.next(res.data);\n        this.page$.next(res.page);\n      });\n  }\n\n  getLikes(postId) {\n    return this.http.get<{ _id: string; name: string; avatar: string }[]>(\n      `${this.url}/${postId}/like`\n    );\n  }\n\n  likePost(postId: string, userId: string) {\n    // optimistic update\n    const posts = [...this.getPosts()];\n\n    const index = posts.findIndex((post) => post._id === postId);\n\n    const prevLikes = [...posts[index].likes];\n\n    const alreadyLiked = posts[index].likes.find((id) => id === userId);\n\n    if (alreadyLiked) {\n      posts[index].likes = posts[index].likes.filter((id) => id !== userId);\n    } else {\n      posts[index].likes.push(userId);\n    }\n\n    this.posts$.next(posts);\n\n    this.http\n      .patch<string | undefined>(`${this.url}/${postId}/like`, { userId })\n      .subscribe(\n        (res) => {\n          if (!res) {\n            const likeIndex = posts[index].likes.findIndex(\n              (id) => id === userId\n            );\n            posts[index].likes.splice(likeIndex, 1);\n            this.posts$.next(posts);\n          }\n        },\n        (error) => {\n          posts[index].likes = prevLikes;\n\n          this.posts$.next(posts);\n        }\n      );\n  }\n\n  createComment(formValue: any, postId: string, loggedinUser) {\n    const posts = [...this.getPosts()];\n\n    const index = posts.findIndex((p) => p._id === postId);\n\n    const prevComments = [...posts[index].comments];\n\n    posts[index].comments = [\n      ...posts[index].comments,\n      {\n        user: loggedinUser._id,\n        avatar: loggedinUser.avatar,\n        name: loggedinUser.name,\n        content: formValue.comment,\n      },\n    ];\n\n    this.http\n      .post<Comment>(`${this.url}/${postId}/comments`, formValue)\n      .subscribe(\n        (comment) => {\n          const comments = [...posts[index].comments];\n          const lastIndex = comments.length - 1;\n\n          comments[lastIndex] = comment;\n        },\n        (error) => {\n          posts[index].comments = prevComments;\n        }\n      );\n  }\n\n  deleteComment(postId: string, commentId: string) {\n    // optimistic update\n    const posts = [...this.getPosts()];\n\n    const index = posts.findIndex((post) => post._id === postId);\n\n    const prevComments = [...posts[index].comments];\n\n    const filteredComments = posts[index].comments.filter(\n      (comment) => comment._id !== commentId\n    );\n\n    posts[index].comments = filteredComments;\n\n    this.posts$.next(posts);\n\n    this.http\n      .delete<null>(`${this.url}/${postId}/comments/${commentId}`)\n      .subscribe(\n        () => {},\n        (error) => {\n          posts[index].comments = prevComments;\n        }\n      );\n  }\n}\n"]}