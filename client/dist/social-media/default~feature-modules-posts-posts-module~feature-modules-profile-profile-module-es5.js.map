{"version":3,"sources":["webpack:///src/app/feature-modules/posts/create-post/create-post.component.ts","webpack:///src/app/feature-modules/posts/create-post/create-post.component.html","webpack:///src/app/feature-modules/posts/edit-post/edit-post.component.ts","webpack:///src/app/feature-modules/posts/edit-post/edit-post.component.html","webpack:///src/app/feature-modules/posts/post-list-home/post-list-home.component.ts","webpack:///src/app/feature-modules/posts/post-list-home/post-list-home.component.html","webpack:///src/app/feature-modules/posts/post-list/post-list.component.ts","webpack:///src/app/feature-modules/posts/post-list/post-list.component.html","webpack:///src/app/feature-modules/posts/posts-routing.module.ts","webpack:///src/app/feature-modules/posts/posts.module.ts","webpack:///src/app/feature-modules/posts/posts.service.ts"],"names":["CreatePostComponent","route","router","postsService","authService","initialFormValue","title","content","image","user$","subscribe","userProfile","loggedInUser","post","createPost","navigate","relativeTo","queryParams","ts","Date","now","toString","queryParamsHandling","skipLocationChange","onCreatePost","selector","templateUrl","styleUrls","EditPostComponent","errorService","errorSub","error$","error","errorMessage","message","authSub","user","paramMap","pipe","pm","postId","get","loading","getPost","postValue","updateMyPost","unsubscribe","PostListHomeComponent","posts","page","pageSize","currentPage","totalData","totalPage","userSub","loggedinUser","queryParamMap","qp","getPosts","res","data","id","deleteMyPost","deletedPost","filter","_id","reloadPage","e","pageIndex","onChangePage","PostListComponent","deleteClicked","emit","routes","path","component","PostsRoutingModule","forChild","imports","exports","PostsModule","declarations","PostsService","http","url","postData","FormData","append","put","providedIn"],"mappings":"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","file":"default~feature-modules-posts-posts-module~feature-modules-profile-profile-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/interfaces/auth.model';\n\nimport { PostsService } from '../posts.service';\nimport { AuthService } from 'src/app/feature-modules/auth/auth.service';\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css'],\n})\nexport class CreatePostComponent implements OnInit {\n  loggedInUser: User;\n  initialFormValue = {\n    title: '',\n    content: '',\n    image: '',\n  };\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private postsService: PostsService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.authService.user$.subscribe((userProfile) => {\n      this.loggedInUser = userProfile;\n    });\n  }\n\n  onCreatePost(post) {\n    this.postsService.createPost(post).subscribe(() => {\n      this.router.navigate(['./'], {\n        relativeTo: this.route,\n        queryParams: {\n          ts: Date.now().toString(),\n        },\n        queryParamsHandling: 'merge',\n        skipLocationChange: true,\n      });\n    });\n  }\n}\n","<app-post-form\n  [loggedInUser]=\"loggedInUser\"\n  [initialFormValue]=\"initialFormValue\"\n  (formSubmitted)=\"onCreatePost($event)\"\n></app-post-form>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\nimport { switchMap } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { User } from 'src/app/interfaces/auth.model';\n\nimport { PostsService } from '../posts.service';\nimport { AuthService } from 'src/app/feature-modules/auth/auth.service';\nimport { ErrorService } from 'src/app/error.service';\n\n@Component({\n  selector: 'app-edit-post',\n  templateUrl: './edit-post.component.html',\n  styleUrls: ['./edit-post.component.css'],\n})\nexport class EditPostComponent implements OnInit, OnDestroy {\n  loggedInUser: User;\n  initialFormValue = {\n    title: '',\n    content: '',\n    image: '',\n  };\n  postId: string;\n  loading: boolean;\n  errorMessage: string;\n  errorSub: Subscription;\n  authSub: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private postsService: PostsService,\n    private authService: AuthService,\n    private errorService: ErrorService\n  ) {}\n\n  ngOnInit(): void {\n    this.errorSub = this.errorService.error$.subscribe((error) => {\n      this.errorMessage = error.error.message;\n    });\n\n    this.authSub = this.authService.user$.subscribe((user) => {\n      this.loggedInUser = user;\n    });\n\n    this.route.paramMap\n      .pipe(\n        switchMap((pm: ParamMap) => {\n          this.postId = pm.get('id');\n\n          this.loading = true;\n          return this.postsService.getPost(this.postId);\n        })\n      )\n      .subscribe((postValue) => {\n        this.initialFormValue = postValue;\n\n        this.loading = false;\n      });\n  }\n\n  onEditPost(postValue) {\n    this.postsService.updateMyPost(this.postId, postValue).subscribe(() => {\n      this.router.navigate(['../../'], { relativeTo: this.route });\n    });\n  }\n\n  ngOnDestroy() {\n    this.errorSub.unsubscribe();\n    this.authSub.unsubscribe();\n  }\n}\n","<app-spinner *ngIf=\"loading\"></app-spinner>\n<app-error [errorMessage]=\"errorMessage\"></app-error>\n<app-post-form\n  *ngIf=\"!loading\"\n  [loggedInUser]=\"loggedInUser\"\n  [initialFormValue]=\"initialFormValue\"\n  (formSubmitted)=\"onEditPost($event)\"\n></app-post-form>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { User } from 'src/app/interfaces/auth.model';\nimport { Page } from 'src/app/interfaces/page.model';\nimport { Post } from 'src/app/interfaces/post.model';\n\nimport { PostsService } from '../posts.service';\nimport { AuthService } from 'src/app/feature-modules/auth/auth.service';\nimport { ErrorService } from 'src/app/error.service';\n\n@Component({\n  selector: 'app-post-list-home',\n  templateUrl: './post-list-home.component.html',\n  styleUrls: ['./post-list-home.component.css'],\n})\nexport class PostListHomeComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n  page: Page = {\n    pageSize: 3,\n    currentPage: 1,\n    totalData: 0,\n    totalPage: 0,\n  };\n  loading: boolean;\n  loggedinUser: User;\n  errorMessage: string;\n\n  private userSub: Subscription;\n  private errorSub: Subscription;\n\n  constructor(\n    private postsService: PostsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private errorService: ErrorService\n  ) {}\n\n  ngOnInit(): void {\n    this.userSub = this.authService.user$.subscribe((user) => {\n      this.loggedinUser = user;\n    });\n\n    this.errorSub = this.errorService.error$.subscribe((error) => {\n      this.loading = false;\n      this.errorMessage = error.error.message;\n    });\n\n    this.route.queryParamMap\n      .pipe(\n        switchMap((qp: ParamMap) => {\n          const currentPage = +qp.get('page') || this.page.currentPage;\n          const pageSize = +qp.get('pageSize') || this.page.pageSize;\n          this.loading = true;\n          return this.postsService.getPosts(currentPage, pageSize);\n        })\n      )\n      .subscribe((res) => {\n        this.posts = res.data;\n        this.page = res.page;\n        this.loading = false;\n      });\n  }\n\n  onDeletePost(id: string) {\n    this.loading = true;\n    this.errorMessage = '';\n    this.postsService.deleteMyPost(id).subscribe((deletedPost) => {\n      this.posts = this.posts.filter((post) => post._id !== deletedPost._id);\n      this.loading = false;\n\n      this.reloadPage();\n    });\n  }\n\n  onChangePage(e: PageEvent) {\n    this.router.navigate(['./'], {\n      relativeTo: this.route,\n      queryParams: {\n        page: e.pageIndex + 1,\n        pageSize: e.pageSize,\n      },\n    });\n  }\n\n  ngOnDestroy() {\n    this.userSub.unsubscribe();\n    this.errorSub.unsubscribe();\n  }\n\n  private reloadPage() {\n    this.router.navigate(['./'], {\n      relativeTo: this.route,\n      queryParams: {\n        ts: Date.now().toString(),\n      },\n      queryParamsHandling: 'merge',\n      skipLocationChange: true,\n    });\n  }\n}\n","<app-spinner *ngIf=\"loading\"></app-spinner>\n<ng-container *ngIf=\"loggedinUser && !loading\">\n  <app-error *ngIf=\"errorMessage\" [errorMessage]=\"errorMessage\"></app-error>\n  <app-create-post></app-create-post>\n  <app-post-list\n    [posts]=\"posts\"\n    [loggedinUser]=\"loggedinUser\"\n    (deleteClicked)=\"onDeletePost($event)\"\n  ></app-post-list>\n</ng-container>\n<mat-paginator\n  [length]=\"page.totalData\"\n  [pageSize]=\"page.pageSize\"\n  [pageSizeOptions]=\"[1, 3, 5]\"\n  (page)=\"onChangePage($event)\"\n>\n</mat-paginator>\n\n<p class=\"mat-body-1 info-text\" *ngIf=\"posts.length <= 0 && !loading\">\n  No posts added yet.\n</p>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { User } from 'src/app/interfaces/auth.model';\nimport { Post } from 'src/app/interfaces/post.model';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css'],\n})\nexport class PostListComponent implements OnInit {\n  @Input() posts: Post[];\n  @Input() loggedinUser: User;\n  @Output() deleteClicked = new EventEmitter<string>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onDeleteClick(id: string) {\n    this.deleteClicked.emit(id);\n  }\n}\n","<div *ngFor=\"let post of posts\" class=\"container\">\n  <mat-card>\n    <mat-card-header>\n      <img mat-card-avatar [src]=\"post.user.avatar\" />\n      <mat-card-title>{{ post.user.name }}</mat-card-title>\n      <mat-card-subtitle>{{ post.createdAt | date }}</mat-card-subtitle>\n\n      <button\n        *ngIf=\"loggedinUser._id === post.user._id\"\n        mat-icon-button\n        [matMenuTriggerFor]=\"more_options\"\n      >\n        <mat-icon>more_horiz</mat-icon>\n      </button>\n      <mat-menu #more_options=\"matMenu\">\n        <a\n          mat-menu-item\n          [routerLink]=\"['./', post._id, 'edit']\"\n          routerLinkActive=\"router-link-active\"\n        >\n          Edit\n        </a>\n        <button mat-menu-item color=\"warn\" (click)=\"onDeleteClick(post._id)\">\n          Delete\n        </button>\n      </mat-menu>\n    </mat-card-header>\n    <mat-card-content>\n      <h3>{{ post.title }}</h3>\n      <p>\n        {{ post.content }}\n      </p>\n    </mat-card-content>\n    <ng-container class=\"image\">\n      <img\n        *ngIf=\"post.image\"\n        [src]=\"post.image\"\n        [alt]=\"post.title\"\n        mat-card-image\n      />\n    </ng-container>\n    <mat-card-actions align=\"end\">\n      <button mat-button>LIKE</button>\n      <button mat-button>SHARE</button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPostComponent } from './edit-post/edit-post.component';\nimport { PostListHomeComponent } from './post-list-home/post-list-home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostListHomeComponent,\n  },\n  { path: ':id/edit', component: EditPostComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n\n  exports: [RouterModule],\n})\nexport class PostsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { PostsRoutingModule } from './posts-routing.module';\nimport { AngularMaterialModule } from 'src/app/angular-material.module';\nimport { SharedModule } from 'src/app/shared-module/shared.module';\n\nimport { CreatePostComponent } from './create-post/create-post.component';\nimport { PostListComponent } from './post-list/post-list.component';\nimport { EditPostComponent } from './edit-post/edit-post.component';\nimport { PostListHomeComponent } from './post-list-home/post-list-home.component';\n\n@NgModule({\n  declarations: [\n    CreatePostComponent,\n    PostListComponent,\n    EditPostComponent,\n    PostListHomeComponent,\n  ],\n  imports: [\n    CommonModule,\n    PostsRoutingModule,\n    AngularMaterialModule,\n    ReactiveFormsModule,\n    SharedModule,\n  ],\n  exports: [PostsRoutingModule, CreatePostComponent, PostListComponent],\n})\nexport class PostsModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Post } from 'src/app/interfaces/post.model';\nimport { Page } from '../../interfaces/page.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostsService {\n  private readonly url = '/api/posts';\n  token: string;\n\n  constructor(private http: HttpClient) {}\n\n  getMyPosts() {\n    return this.http.get<{ data: Post[] }>(`${this.url}/me`);\n  }\n\n  deleteMyPost(id: string) {\n    return this.http.delete<Post>(`${this.url}/${id}/me`);\n  }\n\n  updateMyPost(postId: string, post: Post) {\n    let postData: Post | FormData;\n\n    if (typeof post.image === 'string') {\n      postData = post;\n    }\n\n    if (typeof post.image === 'object') {\n      postData = new FormData();\n\n      postData.append('title', post.title);\n      postData.append('content', post.content);\n      postData.append('image', post.image);\n    }\n\n    return this.http.put(`${this.url}/${postId}/me`, postData);\n  }\n\n  getPost(id: string) {\n    return this.http.get<Post>(`${this.url}/${id}`);\n  }\n\n  getPosts(page: number, pageSize: number) {\n    return this.http.get<{ data: Post[]; page: Page }>(\n      `${this.url}?page=${page}&pageSize=${pageSize}`\n    );\n  }\n\n  createPost(post) {\n    const postData = new FormData();\n    postData.append('title', post.title);\n    postData.append('content', post.content);\n    postData.append('image', post.image);\n\n    return this.http.post<Post>(this.url, postData);\n  }\n\n  deletePost(postId: string) {\n    return this.http.delete<Post>(`${this.url}/${postId}`);\n  }\n}\n"]}