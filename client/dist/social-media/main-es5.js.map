{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/angular-material.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/error.service.ts","webpack:///src/app/feature-modules/auth/auth-form/auth-form.component.ts","webpack:///src/app/feature-modules/auth/auth-form/auth-form.component.html","webpack:///src/app/feature-modules/auth/auth.module.ts","webpack:///src/app/feature-modules/auth/auth.service.ts","webpack:///src/app/feature-modules/auth/login/login.component.ts","webpack:///src/app/feature-modules/auth/login/login.component.html","webpack:///src/app/feature-modules/auth/signup/signup.component.ts","webpack:///src/app/feature-modules/auth/signup/signup.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/interceptors/auth.interceptor.ts","webpack:///src/app/interceptors/error.interceptor.ts","webpack:///src/app/shared-module/error/error.component.ts","webpack:///src/app/shared-module/error/error.component.html","webpack:///src/app/shared-module/post-form/post-form.component.ts","webpack:///src/app/shared-module/post-form/post-form.component.html","webpack:///src/app/shared-module/shared.module.ts","webpack:///src/app/shared-module/spinner/spinner.component.ts","webpack:///src/app/shared-module/spinner/spinner.component.html","webpack:///src/app/validators/mime-type.validator.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AngularMaterialModule","routes","path","component","canLoad","loadChildren","m","PostsModule","ProfileModule","AppRoutingModule","forRoot","imports","AppComponent","authService","title","checkAuth","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","ErrorService","error$","providedIn","AuthFormComponent","fb","formSubmiited","form","formTitle","group","name","required","email","password","markAllAsTouched","invalid","emit","value","onFormSubmit","AuthModule","AuthService","http","router","route","url","isLoggedIn$","user$","credentials","post","subscribe","user","next","setTokenTimerAndSaveAuthToStorage","userToken","expiresIn","token","navigate","relativeTo","error","message","get","localStorage","removeItem","clearTimeout","tokenTimer","JSON","parse","getItem","now","Date","expiresInMs","expirationDate","getTime","setTokenTimer","getMyProfile","signout","saveAuthToStorage","expiration","toISOString","setItem","stringify","duration","setTimeout","LoginComponent","errorSub","errorMessage","loading","formValues","login","unsubscribe","SignupComponent","signup","AuthGuard","segments","pipe","isLoggedin","HeaderComponent","authSub","isLoggedIn","AuthInterceptor","modifiedRequest","clone","headers","append","handle","ErrorInterceptor","errorService","ErrorComponent","PostFormComponent","initialFormValue","content","image","formSubmitted","changes","propName","hasOwnProperty","setFormValue","patchValue","imagePreview","event","file","target","files","reader","FileReader","updateValueAndValidity","onload","result","readAsDataURL","onUploadImage","SharedModule","SpinnerComponent","mimeType","control","fileReader","fileReader$","observer","addEventListener","arr","Uint8Array","subarray","header","isValid","i","toString","invalidMimeType","complete","readAsArrayBuffer","environment","production","bootstrapModule","err","console"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA6BaC,qB;;;;;YAAAA;;;;yBAAAA,qB;AAAqB,O;AAAA,gBAb9B,wEAa8B,EAZ9B,oEAY8B,EAX9B,+EAW8B,EAV9B,sEAU8B,EAT9B,2FAS8B,EAR9B,oEAQ8B,EAP9B,0EAO8B,EAN9B,wEAM8B,EAL9B,wEAK8B,EAJ9B,qEAI8B,EAH9B,+EAG8B;;;;0HAArBA,qB,EAAqB;AAAA,kBAb9B,wEAa8B,EAZ9B,oEAY8B,EAX9B,+EAW8B,EAV9B,sEAU8B,EAT9B,2FAS8B,EAR9B,oEAQ8B,EAP9B,0EAO8B,EAN9B,wEAM8B,EAL9B,wEAK8B,EAJ9B,qEAI8B,EAH9B,+EAG8B;AAAA,O;AAHZ,K;;;;;sEAGTA,qB,EAAqB;cAfjC,sDAeiC;eAfxB;AACRF,iBAAO,EAAE,CACP,wEADO,EAEP,oEAFO,EAGP,+EAHO,EAIP,sEAJO,EAKP,2FALO,EAMP,oEANO,EAOP,0EAPO,EAQP,wEARO,EASP,wEATO,EAUP,qEAVO,EAWP,+EAXO;AADD,S;AAewB,Q;;;;;;;;;;;;;;;;;;AC7BlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAMG,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADqB,EAErB;AAAED,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE;AAA7B,KAFqB,EAGrB;AACED,UAAI,EAAE,OADR;AAEEE,aAAO,EAAE,CAAC,4DAAD,CAFX;AAGEC,kBAAY,EAAE;AAAA,eACZ;AAAA;AAAA;AAAA;AAAA,4DAA+Cb,IAA/C,CAAoD,UAACc,CAAD;AAAA,iBAAOA,CAAC,CAACC,WAAT;AAAA,SAApD,CADY;AAAA;AAHhB,KAHqB,EASrB;AACEL,UAAI,EAAE,SADR;AAEEE,aAAO,EAAE,CAAC,4DAAD,CAFX;AAGEC,kBAAY,EAAE;AAAA,eACZ;AAAA;AAAA;AAAA;AAAA,gEAAmDb,IAAnD,CACE,UAACc,CAAD;AAAA,iBAAOA,CAAC,CAACE,aAAT;AAAA,SADF,CADY;AAAA;AAHhB,KATqB,CAAvB;;QAuBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBT,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBQ,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBT,MAArB,CAAD,CADD;AAERH,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AC/B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQac,Y;;;AAGX,4BAAoBC,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAFpB,aAAAC,KAAA,GAAQ,gBAAR;AAEgD;;;;mCAErC;AACT,eAAKD,WAAL,CAAiBE,SAAjB;AACD;;;;;;;uBAPUH,Y,EAAY,+I;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACRzB;;AACA;;AACE;;AACF;;;;;;;;;sEDKaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTI,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAyCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAdT,CACT;AACEC,eAAO,EAAE,sEADX;AAEEC,gBAAQ,EAAE,+EAFZ;AAGEC,aAAK,EAAE;AAHT,OADS,EAMT;AACEF,eAAO,EAAE,sEADX;AAEEC,gBAAQ,EAAE,iFAFZ;AAGEC,aAAK,EAAE;AAHT,OANS,C;AAWV,gBApBQ,CACP,uEADO,EAEP,oEAFO,EAGP,8EAHO,EAIP,4FAJO,EAKP,qEALO,EAMP,4EANO,EAOP,yEAPO,CAoBR;;;;0HAGUH,S,EAAS;AAAA,uBAxBL,2DAwBK,EAxBS,wEAwBT;AAxBwB,kBAE1C,uEAF0C,EAG1C,oEAH0C,EAI1C,8EAJ0C,EAK1C,4FAL0C,EAM1C,qEAN0C,EAO1C,4EAP0C,EAQ1C,yEAR0C;AAwBxB,O;AAhBN,K;;;;;sEAgBHA,S,EAAS;cAzBrB,sDAyBqB;eAzBZ;AACRI,sBAAY,EAAE,CAAC,2DAAD,EAAe,wEAAf,CADN;AAERZ,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,8EAHO,EAIP,4FAJO,EAKP,qEALO,EAMP,4EANO,EAOP,yEAPO,CAFD;AAWRa,mBAAS,EAAE,CACT;AACEJ,mBAAO,EAAE,sEADX;AAEEC,oBAAQ,EAAE,+EAFZ;AAGEC,iBAAK,EAAE;AAHT,WADS,EAMT;AACEF,mBAAO,EAAE,sEADX;AAEEC,oBAAQ,EAAE,iFAFZ;AAGEC,iBAAK,EAAE;AAHT,WANS,CAXH;AAuBRG,mBAAS,EAAE,CAAC,2DAAD;AAvBH,S;AAyBY,Q;;;;;;;;;;;;;;;;;;ACxCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,Y,GAGX,wBAAc;AAAA;;AAFd,WAAAC,MAAA,GAAS,IAAI,4CAAJ,EAAT;AAEgB,K;;;uBAHLD,Y;AAAY,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVE,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;ACPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUQ;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;AAHgB;;AAAA;;;;;;AANlB;;AACE;;AACE;;AACF;;AAEA;;AAKF;;;;;;AALa;;AAAA;;;;;;AAiBX;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;AAHgB;;AAAA;;;;;;AAiBd;;AACE;;AACF;;;;;;AALF;;AAGE;;AAGF;;;;;;AAHgB;;AAAA;;;;;;AAKhB;;AAAgC;;AAAkB;;;;;;AAAlB;;AAAA;;;;QDxCvBC,iB;;;AAMX,iCAAoBC,EAApB,EAAqC;AAAA;;AAAjB,aAAAA,EAAA,GAAAA,EAAA;AAHV,aAAAC,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAG6B;;;;mCAE/B;AACN,eAAKC,IAAL,GACE,KAAKC,SAAL,KAAmB,QAAnB,GACI,KAAKH,EAAL,CAAQI,KAAR,CAAc;AACZC,gBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,CAAL,CADM;AAEZC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,CAAL,CAFK;AAGZE,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL;AAHE,WAAd,CADJ,GAMI,KAAKN,EAAL,CAAQI,KAAR,CAAc;AACZG,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,CAAL,CADK;AAEZE,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL;AAFE,WAAd,CAPN;AAWD;;;uCAEc;AACb,eAAKJ,IAAL,CAAUO,gBAAV;;AAEA,cAAI,KAAKP,IAAL,CAAUQ,OAAd,EAAuB;AACrB;AACD;;AAED,eAAKT,aAAL,CAAmBU,IAAnB,CAAwB,KAAKT,IAAL,CAAUU,KAAlC;AACD;;;;;;;uBA9BUb,iB,EAAiB,2H;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,ua;AAAA;AAAA;ACR9B;;AACE;;AAAyB;AAAA,mBAAY,IAAAc,YAAA,EAAZ;AAA0B,WAA1B;;AACvB;;AAAgB;;AAAe;;AAE/B;;AAYA;;AACE;;AAMF;;AAEA;;AAMA;;AACE;;AAMF;;AAEA;;AAQA;;AAEA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;;;AAvDQ;;AAAA;;AACY;;AAAA;;AAEF;;AAAA;;AAqBH;;AAAA;;AAgBT;;AAAA;;AAOS;;AAAA;;AAIP;;AAAA;;;;;;;;;sED5CKd,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTb,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;gBAC3B;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAoBa0B,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBAPZ,CACP,4DADO,EAEP,kEAFO,EAGP,qFAHO,EAIP,gFAJO,CAOY;;;;0HAAVA,U,EAAU;AAAA,uBARN,qEAQM,EARU,wEAQV,EAR2B,gFAQ3B;AAR4C,kBAE/D,4DAF+D,EAG/D,kEAH+D,EAI/D,qFAJ+D,EAK/D,gFAL+D;AAQ5C,O;AAHP,K;;;;;sEAGHA,U,EAAU;cATtB,sDASsB;eATb;AACRrB,sBAAY,EAAE,CAAC,qEAAD,EAAiB,wEAAjB,EAAkC,gFAAlC,CADN;AAERZ,iBAAO,EAAE,CACP,4DADO,EAEP,kEAFO,EAGP,qFAHO,EAIP,gFAJO;AAFD,S;AASa,Q;;;;;;;;;;;;;;;;;;ACnBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUakC,W;;;AAOX,2BACUC,IADV,EAEUC,MAFV,EAGUC,KAHV,EAG+B;AAAA;;AAFrB,aAAAF,IAAA,GAAAA,IAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AATO,aAAAC,GAAA,GAAM,WAAN;AAEjB,aAAAC,WAAA,GAAc,IAAI,oDAAJ,CAA6B,IAA7B,CAAd;AACA,aAAAC,KAAA,GAAQ,IAAI,oDAAJ,CAA0B,IAA1B,CAAR;AACA,aAAAxB,MAAA,GAAS,IAAI,4CAAJ,EAAT;AAMI;;;;8BAEEyB,W,EAA6B;AAAA;;AACjC,eAAKN,IAAL,CAAUO,IAAV,WAAwB,KAAKJ,GAA7B,aAA0CG,WAA1C,EAAuDE,SAAvD,CACE,UAACC,IAAD,EAAU;AACR,iBAAI,CAACL,WAAL,CAAiBM,IAAjB,CAAsB,IAAtB;;AACA,iBAAI,CAACL,KAAL,CAAWK,IAAX,CAAgBD,IAAhB;;AACA,iBAAI,CAAC5B,MAAL,CAAY6B,IAAZ,CAAiB,EAAjB;;AAEA,iBAAI,CAACC,iCAAL,CACEF,IAAI,CAACG,SAAL,CAAeC,SADjB,EAEEJ,IAAI,CAACG,SAAL,CAAeE,KAFjB;;AAKA,iBAAI,CAACb,MAAL,CAAYc,QAAZ,CAAqB,CAAC,IAAD,EAAO,OAAP,CAArB,EAAsC;AACpCC,wBAAU,EAAE,KAAI,CAACd;AADmB,aAAtC;AAGD,WAdH,EAeE,UAACe,KAAD,EAAW;AACT,iBAAI,CAACpC,MAAL,CAAY6B,IAAZ,CAAiBO,KAAK,CAACA,KAAN,CAAYC,OAA7B;AACD,WAjBH;AAmBD;;;+BAEMZ,W,EAA6B;AAAA;;AAClC,eAAKN,IAAL,CAAUO,IAAV,CAAqB,KAAKJ,GAA1B,EAA+BG,WAA/B,EAA4CE,SAA5C,CACE,UAACC,IAAD,EAAU;AACR,kBAAI,CAACL,WAAL,CAAiBM,IAAjB,CAAsB,IAAtB;;AACA,kBAAI,CAACL,KAAL,CAAWK,IAAX,CAAgBD,IAAhB;;AAEA,kBAAI,CAACE,iCAAL,CACEF,IAAI,CAACG,SAAL,CAAeC,SADjB,EAEEJ,IAAI,CAACG,SAAL,CAAeE,KAFjB;;AAKA,kBAAI,CAACb,MAAL,CAAYc,QAAZ,CAAqB,CAAC,KAAD,EAAQ,OAAR,CAArB,EAAuC;AACrCC,wBAAU,EAAE,MAAI,CAACd;AADoB,aAAvC;AAGD,WAbH,EAcE,UAACe,KAAD,EAAW;AACT,kBAAI,CAACpC,MAAL,CAAY6B,IAAZ,CAAiBO,KAAK,CAACA,KAAN,CAAYC,OAA7B;AACD,WAhBH;AAkBD;;;uCAEc;AAAA;;AACb,eAAKlB,IAAL,CAAUmB,GAAV,WAAuB,KAAKhB,GAA5B,UAAsCK,SAAtC,CAAgD,UAACC,IAAD,EAAU;AACxD,kBAAI,CAACJ,KAAL,CAAWK,IAAX,CAAgBD,IAAhB;AACD,WAFD;AAGD;;;kCAES;AACRW,sBAAY,CAACC,UAAb,CAAwB,WAAxB;AAEA,eAAKjB,WAAL,CAAiBM,IAAjB,CAAsB,KAAtB;AAEA,eAAKT,MAAL,CAAYc,QAAZ,CAAqB,CAAC,GAAD,CAArB;AAEAO,sBAAY,CAAC,KAAKC,UAAN,CAAZ;AACD;;;oCAEW;AACV,cAAMX,SAAS,GAAGY,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,WAArB,CAAX,CAAlB;;AAEA,cAAI,CAACd,SAAL,EAAgB;AACd;AACD;;AAED,cAAMe,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,cAAMC,WAAW,GACf,IAAID,IAAJ,CAAShB,SAAS,CAACkB,cAAnB,EAAmCC,OAAnC,KAA+CJ,GAAG,CAACI,OAAJ,EADjD;;AAGA,cAAIF,WAAW,GAAG,CAAlB,EAAqB;AACnB,iBAAKzB,WAAL,CAAiBM,IAAjB,CAAsB,IAAtB;AACA,iBAAKsB,aAAL,CAAmBH,WAAnB;AACA,iBAAKI,YAAL;AACD,WAJD,MAIO;AACL,iBAAKC,OAAL;AACD;AACF;;;0DAEiCrB,S,EAAmBC,K,EAAe;AAClE,cAAMe,WAAW,GAAG,CAAChB,SAAD,GAAa,IAAjC;AACA,eAAKmB,aAAL,CAAmBH,WAAnB;AACA,eAAKM,iBAAL,CAAuBrB,KAAvB,EAA8Be,WAA9B;AACD;;;0CAEyBf,K,EAAeD,S,EAAmB;AAC1D,cAAMc,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,cAAMQ,UAAU,GAAG,IAAIR,IAAJ,CAASD,GAAG,CAACI,OAAJ,KAAgBlB,SAAzB,CAAnB;AAEA,cAAMiB,cAAc,GAAGM,UAAU,CAACC,WAAX,EAAvB;AAEAjB,sBAAY,CAACkB,OAAb,CACE,WADF,EAEEd,IAAI,CAACe,SAAL,CAAe;AAAEzB,iBAAK,EAALA,KAAF;AAASgB,0BAAc,EAAdA;AAAT,WAAf,CAFF;AAID;;;sCAEqBU,Q,EAAkB;AAAA;;AACtC,eAAKjB,UAAL,GAAkBkB,UAAU,CAAC,YAAM;AACjC,kBAAI,CAACP,OAAL;AACD,WAF2B,EAEzBM,QAFyB,CAA5B;AAGD;;;;;;;uBAlHUzC,W,EAAW,uH,EAAA,8G,EAAA,sH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVjB,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACXxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;;;QDSa4D,c;;;AAKX,8BAAoB3E,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA4B;;;;mCAExC;AAAA;;AACN,eAAK4E,QAAL,GAAgB,KAAK5E,WAAL,CAAiBc,MAAjB,CAAwB2B,SAAxB,CAAkC,UAACoC,YAAD,EAAkB;AAClE,kBAAI,CAACC,OAAL,GAAe,KAAf;AACA,kBAAI,CAACD,YAAL,GAAoBA,YAApB;AACD,WAHe,CAAhB;AAID;;;8BAEKE,U,EAAY;AAChB,eAAKD,OAAL,GAAe,IAAf;AACA,eAAK9E,WAAL,CAAiBgF,KAAjB,CAAuBD,UAAvB;AACD;;;sCAEa;AACZ,eAAKH,QAAL,CAAcK,WAAd;AACD;;;;;;;uBArBUN,c,EAAc,0H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,uF;AAAA;AAAA;ACT3B;;AACA;;AAGE;AAAA,mBAAiB,IAAAK,KAAA,QAAjB;AAA8B,WAA9B;;AACD;;;;AALY;;AAEX;;AAAA;;;;;;;;;sEDOWL,c,EAAc;cAL1B,uDAK0B;eALhB;AACTxE,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;AET3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;;;QDUa6E,e;;;AAKX,+BAAoBlF,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA4B;;;;mCAExC;AAAA;;AACN,eAAK4E,QAAL,GAAgB,KAAK5E,WAAL,CAAiBc,MAAjB,CAAwB2B,SAAxB,CAAkC,UAACoC,YAAD,EAAkB;AAClE,kBAAI,CAACC,OAAL,GAAe,KAAf;AACA,kBAAI,CAACD,YAAL,GAAoBA,YAApB;AACD,WAHe,CAAhB;AAID;;;+BAEME,U,EAA4B;AACjC,eAAKD,OAAL,GAAe,IAAf;AAEA,eAAK9E,WAAL,CAAiBmF,MAAjB,CAAwBJ,UAAxB;AACD;;;sCAEa;AACZ,eAAKH,QAAL,CAAcK,WAAd;AACD;;;;;;;uBAtBUC,e,EAAe,0H;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,wF;AAAA;AAAA;ACV5B;;AACA;;AAGE;AAAA,mBAAiB,IAAAC,MAAA,QAAjB;AAA+B,WAA/B;;AACD;;;;AALY;;AAEX;;AAAA;;;;;;;;;sEDQWD,e,EAAe;cAL3B,uDAK2B;eALjB;AACT/E,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiBa+E,S;;;AACX,yBAAoBpF,WAApB,EAAsDkC,MAAtD,EAAsE;AAAA;;AAAlD,aAAAlC,WAAA,GAAAA,WAAA;AAAkC,aAAAkC,MAAA,GAAAA,MAAA;AAAkB;;;;gCAGtEC,K,EACAkD,Q,EAAsB;AAAA;;AAEtB,iBAAO,KAAKrF,WAAL,CAAiBqC,WAAjB,CAA6BiD,IAA7B,CACL,2DAAI,UAAC5C,IAAD;AAAA,mBAAWA,IAAI,GAAG,IAAH,GAAU,KAAzB;AAAA,WAAJ,CADK,EAEL,4DAAK,CAAL,CAFK,EAGL,2DAAI,UAAC6C,UAAD,EAAgB;AAClB,gBAAI,CAACA,UAAL,EAAiB;AACf,oBAAI,CAACrD,MAAL,CAAYc,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;AACF,WAJD,CAHK,CAAP;AASD;;;;;;;uBAhBUoC,S,EAAS,sI,EAAA,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVrE,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACjBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;ACMI;;AACE;;AACE;;AAKE;;AAAU;;AAAc;;AAC1B;;AACF;;AACA;;AACE;;AAKE;;AAAU;;AAAI;;AAChB;;AACF;;AACF;;;;AAfM;;AAAA;;AASA;;AAAA;;;;;;;;;;;;;;;;;;;;AAON;;AACE;;AACE;;AAME;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;;;AAZM;;AAAA,sJAAqB,yBAArB,EAAqB,qEAArB;;AAQY;;AAAA;;;;;;;;AAKlB;;AACE;;AAAc;AAAA;;AAAA;;AAAA;AAAA;;AAAsB;;AAAO;;AAC7C;;;;;;;;;;;;QDlCSyE,e;;;AAKX,+BAAoBxF,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA4B;;;;mCAExC;AAAA;;AACN,eAAKyF,OAAL,GAAe,KAAKzF,WAAL,CAAiBqC,WAAjB,CAA6BI,SAA7B,CAAuC,UAACiD,UAAD,EAAgB;AACpE,kBAAI,CAACA,UAAL,GAAkBA,UAAlB;AACD,WAFc,CAAf;AAGD;;;oCAEW;AACV,eAAK1F,WAAL,CAAiBmE,OAAjB;AACD;;;sCAEa;AACZ,eAAKsB,OAAL,CAAaR,WAAb;AACD;;;;;;;uBAnBUO,e,EAAe,sJ;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,2R;AAAA;AAAA;ACX5B;;AACE;;AACE;;AAAkD;;AAAc;;AAClE;;AACA;;AACA;;AACE;;AAoBA;;AAiBA;;AAGF;;AACF;;;;AA7CO;;AAAA;;AAIW;;AAAA;;AAoBA;;AAAA;;AAiBV;;AAAA;;;;;;;;;sEDhCKA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTrF,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;AEN5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGasF,e;;;AACX,iCAAc;AAAA;AAAE;;;;kCAENnH,G,EAAuBmE,I,EAAmB;AAClD,cAAME,SAAS,GAAGY,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,WAArB,CAAX,CAAlB;;AAEA,cAAId,SAAJ,EAAe;AACb,gBAAM+C,eAAe,GAAGpH,GAAG,CAACqH,KAAJ,CAAU;AAChCC,qBAAO,EAAEtH,GAAG,CAACsH,OAAJ,CAAYC,MAAZ,CACP,eADO,mBAEGlD,SAAS,CAACE,KAFb;AADuB,aAAV,CAAxB;AAMA,mBAAOJ,IAAI,CAACqD,MAAL,CAAYJ,eAAZ,CAAP;AACD;;AAED,iBAAOjD,IAAI,CAACqD,MAAL,CAAYxH,GAAZ,CAAP;AACD;;;;;;;uBAjBUmH,e;AAAe,K;;;aAAfA,e;AAAe,eAAfA,eAAe;;;;;sEAAfA,e,EAAe;cAD3B;AAC2B,Q;;;;;;;;;;;;;;;;;;;;ACF5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaM,gB;;;AACX,gCAAoBC,YAApB,EAAgD;AAAA;;AAA5B,aAAAA,YAAA,GAAAA,YAAA;AAA8B;;;;kCAExC1H,G,EAAuBmE,I,EAAmB;AAAA;;AAClD,iBAAOA,IAAI,CAACqD,MAAL,CAAYxH,GAAZ,EAAiB8G,IAAjB,CACL,kEAAW,UAACpC,KAAD,EAA8B;AACvC,kBAAI,CAACgD,YAAL,CAAkBpF,MAAlB,CAAyB6B,IAAzB,CAA8BO,KAA9B;;AAEA,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAJD,CADK,CAAP;AAOD;;;;;;;uBAXU+C,gB,EAAgB,mH;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;ACZ7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACE;;AAAG;;AAAkC;;AACrC;;AAAsC;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAK;;AACtE;;;;;;AAFK;;AAAA;;;;QDMQE,c;;;AAEX,gCAAc;AAAA;AAAE;;;;mCAER,CAAW;;;uCAEJ;AACb,eAAKtB,YAAL,GAAoB,EAApB;AACD;;;;;;;uBARUsB,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,kF;AAAA;AAAA;ACP3B;;;;AAAU;;;;;;;;;sEDOGA,c,EAAc;cAL1B,uDAK0B;eALhB;AACThG,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;gBACxB;;;;;;;;;;;;;;;;;;;;AERH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYM;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;AAHgB;;AAAA;;;;;;AAgBd;;AACE;;AACF;;;;;;AALF;;AAGE;;AAGF;;;;;;AAHgB;;AAAA;;;;;;AAKhB;;AACE;;AACF;;;;;;AADO;;AAAA,2JAAoB,KAApB,EAAoB,wBAApB;;;;QDdE+F,iB;;;AAkBX,iCAAoBnF,EAApB,EAAqC;AAAA;;AAAjB,aAAAA,EAAA,GAAAA,EAAA;AAhBX,aAAAoF,gBAAA,GAAmB;AAC1BpG,eAAK,EAAE,EADmB;AAE1BqG,iBAAO,EAAE,EAFiB;AAG1BC,eAAK,EAAE;AAHmB,SAAnB;AAMC,aAAAC,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAEV,aAAArF,IAAA,GAAkB,KAAKF,EAAL,CAAQI,KAAR,CAAc;AAC9BpB,eAAK,EAAE,CAAC,KAAKoG,gBAAL,CAAsBpG,KAAvB,EAA8B,CAAC,0DAAWsB,QAAZ,CAA9B,CADuB;AAE9B+E,iBAAO,EAAE,CAAC,KAAKD,gBAAL,CAAsBC,OAAvB,EAAgC,CAAC,0DAAW/E,QAAZ,CAAhC,CAFqB;AAG9BgF,eAAK,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,CAAC,wEAAD,CAAb;AAHuB,SAAd,CAAlB;AAQuC;;;;mCAE/B,CAAW;;;oCAEPE,O,EAAwB;AAClC,eAAK,IAAMC,QAAX,IAAuBD,OAAvB,EAAgC;AAC9B,gBAAIA,OAAO,CAACE,cAAR,CAAuBD,QAAvB,CAAJ,EAAsC;AACpC,sBAAQA,QAAR;AACE,qBAAK,kBAAL;AACE,yBAAO,KAAKE,YAAL,EAAP;AAFJ;AAID;AACF;AACF;;;uCAEc;AACb,eAAKzF,IAAL,CAAU0F,UAAV,CAAqB;AACnB5G,iBAAK,EAAE,KAAKoG,gBAAL,CAAsBpG,KADV;AAEnBqG,mBAAO,EAAE,KAAKD,gBAAL,CAAsBC,OAFZ;AAGnBC,iBAAK,EAAE,KAAKF,gBAAL,CAAsBE;AAHV,WAArB;AAKA,eAAKO,YAAL,GAAoB,KAAKT,gBAAL,CAAsBE,KAA1C;AACD;;;sCAEaQ,K,EAAc;AAAA;;AAC1B,cAAMC,IAAI,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAlC,CAAwC,CAAxC,CAAd;AACA,cAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEA,cAAIJ,IAAJ,EAAU;AACR,iBAAK7F,IAAL,CAAU0F,UAAV,CAAqB;AAAEN,mBAAK,EAAES;AAAT,aAArB;AACA,iBAAK7F,IAAL,CAAUiC,GAAV,CAAc,OAAd,EAAuBiE,sBAAvB;;AAEAF,kBAAM,CAACG,MAAP,GAAgB,UAAC1I,CAAD,EAAO;AACrB,qBAAI,CAACkI,YAAL,GAAoBlI,CAAC,CAACqI,MAAF,CAASM,MAA7B;AACD,aAFD;;AAGAJ,kBAAM,CAACK,aAAP,CAAqBR,IAArB;AACD;AACF;;;uCAEc;AACb,eAAK7F,IAAL,CAAUO,gBAAV;;AAEA,cAAI,KAAKP,IAAL,CAAUQ,OAAd,EAAuB;AACrB;AACD;;AAED,cAAMa,IAAI,GAAS,KAAKrB,IAAL,CAAUU,KAA7B;AAEA,eAAK2E,aAAL,CAAmB5E,IAAnB,CAAwBY,IAAxB;AACD;;;;;;;uBAnEU4D,iB,EAAiB,2H;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,oF;AAAA,e;AAAA,a;AAAA,2kB;AAAA;AAAA;;;ACpB9B;;AACE;;AACE;;AACA;;AAAgB;;AAAuB;;AACzC;;AAEA;;AAAyB;AAAA,mBAAY,IAAAtE,YAAA,EAAZ;AAA0B,WAA1B;;AACvB;;AACE;;AACF;;AAEA;;AAMA;;AACE;;AAKF;;AAEA;;AAQA;;AAIA;;AACE;;AAAiC;AAAA;;AAAA;;AAAA,mBAAS,YAAT;AAA0B,WAA1B;;AAC/B;;AAAuB;;AAAY;;AACrC;;AACA;;AAAqC;AAAA,mBAAU,IAAA2F,aAAA,QAAV;AAA+B,WAA/B;;AAArC;;AACA;;AAME;;AACF;;AACF;;AACF;;AACF;;;;AAlDyB;;AAAA;;AACL;;AAAA;;AAGZ;;AAAA;;AAKO;;AAAA;;AAeT;;AAAA;;AAOyB;;AAAA;;AAavB;;AAAA;;;;;;;;;sED1BKrB,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTjG,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;gBAC3B;;;gBACA;;;gBAMA;;;;;;;;;;;;;;;;;;;;AE5BH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAqBaqH,Y;;;;;YAAAA;;;;yBAAAA,Y;AAAY,O;AAAA,gBARd,CACP,4DADO,EAEP,8EAFO,EAGP,kEAHO,EAIP,4DAJO,CAQc;;;;0HAAZA,Y,EAAY;AAAA,uBATR,gFASQ,EATW,2EASX,EAT6B,qEAS7B;AAT2C,kBAEhE,4DAFgE,EAGhE,8EAHgE,EAIhE,kEAJgE,EAKhE,4DALgE,CAS3C;AAJT,kBAEJ,gFAFI,EAEe,qEAFf,EAE+B,2EAF/B;AAIS,O;AAFsC,K;;;;;sEAElDA,Y,EAAY;cAVxB,sDAUwB;eAVf;AACRhH,sBAAY,EAAE,CAAC,gFAAD,EAAoB,2EAApB,EAAsC,qEAAtC,CADN;AAERZ,iBAAO,EAAE,CACP,4DADO,EAEP,8EAFO,EAGP,kEAHO,EAIP,4DAJO,CAFD;AAQRb,iBAAO,EAAE,CAAC,gFAAD,EAAoB,qEAApB,EAAoC,2EAApC;AARD,S;AAUe,Q;;;;;;;;;;;;;;;;;;ACrBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa0I,gB;;;AAEX,kCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA;AAAA;ACP7B;;;;;;;;;sEDOaA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTxH,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEN7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,QAAMuH,QAAQ,GAAG,SAAXA,QAAW,CACtBC,OADsB,EAEW;AACjC,UAAI,CAACA,OAAO,CAAChG,KAAT,IAAkB,OAAOgG,OAAO,CAAChG,KAAf,KAAyB,QAA/C,EAAyD;AACvD,eAAO,gDAAG,IAAH,CAAP;AACD;;AAED,UAAMmF,IAAI,GAAGa,OAAO,CAAChG,KAArB;AAEA,UAAMiG,UAAU,GAAG,IAAIV,UAAJ,EAAnB;AAEA,UAAMW,WAAW,GAAG,IAAI,+CAAJ,CAAe,UAACC,QAAD,EAA0C;AAC3EF,kBAAU,CAACG,gBAAX,CAA4B,SAA5B,EAAuC,UAACrJ,CAAD,EAAO;AAC5C,cAAMsJ,GAAG,GAAG,IAAIC,UAAJ,CAAevJ,CAAC,CAACqI,MAAF,CAASM,MAAxB,EAA+Ca,QAA/C,CAAwD,CAAxD,EAA2D,CAA3D,CAAZ;AACA,cAAIC,MAAM,GAAG,EAAb;AACA,cAAIC,OAAO,GAAG,KAAd;;AAH4C,qDAK5BJ,GAL4B;AAAA;;AAAA;AAK5C,gEAAqB;AAAA,kBAAVK,CAAU;AACnBF,oBAAM,IAAIE,CAAC,CAACC,QAAF,CAAW,EAAX,CAAV;AACD;AAP2C;AAAA;AAAA;AAAA;AAAA;;AAS5C,kBAAQH,MAAR;AACE,iBAAK,UAAL;AACEC,qBAAO,GAAG,IAAV;AACA;;AACF,iBAAK,UAAL;AACA,iBAAK,UAAL;AACA,iBAAK,UAAL;AACA,iBAAK,UAAL;AACA,iBAAK,UAAL;AACEA,qBAAO,GAAG,IAAV;AACA;;AACF;AACEA,qBAAO,GAAG,KAAV,CADF,CACmB;;AACjB;AAbJ;;AAeA,cAAIA,OAAJ,EAAa;AACXN,oBAAQ,CAACrF,IAAT,CAAc,IAAd;AACD,WAFD,MAEO;AACLqF,oBAAQ,CAACrF,IAAT,CAAc;AAAE8F,6BAAe,EAAE;AAAnB,aAAd;AACD;;AACDT,kBAAQ,CAACU,QAAT;AACD,SA9BD;AA+BAZ,kBAAU,CAACa,iBAAX,CAA6B3B,IAA7B;AACD,OAjCmB,CAApB;AAkCA,aAAOe,WAAP;AACD,KA9CM;;;;;;;;;;;;;;;;;ACHP;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMa,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAAC9F,KAAR,CAAc6F,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n@NgModule({\n  exports: [\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatPaginatorModule,\n  ],\n})\nexport class AngularMaterialModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from './guards/auth.guard';\n\nimport { LoginComponent } from './feature-modules/auth/login/login.component';\nimport { SignupComponent } from './feature-modules/auth/signup/signup.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  {\n    path: 'posts',\n    canLoad: [AuthGuard],\n    loadChildren: () =>\n      import('./feature-modules/posts/posts.module').then((m) => m.PostsModule),\n  },\n  {\n    path: 'profile',\n    canLoad: [AuthGuard],\n    loadChildren: () =>\n      import('./feature-modules/profile/profile.module').then(\n        (m) => m.ProfileModule\n      ),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './feature-modules/auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'Facebook clone';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.checkAuth();\n  }\n}\n","<app-header></app-header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\n\nimport { AuthModule } from './feature-modules/auth/auth.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared-module/shared.module';\nimport { AngularMaterialModule } from './angular-material.module';\n\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\n\n@NgModule({\n  declarations: [AppComponent, HeaderComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularMaterialModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AuthModule,\n    SharedModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorService {\n  error$ = new Subject<HttpErrorResponse>();\n\n  constructor() {}\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styleUrls: ['./auth-form.component.css'],\n})\nexport class AuthFormComponent implements OnInit {\n  @Input() formTitle: string;\n  @Input() errorMessage: string;\n  @Output() formSubmiited = new EventEmitter<any>();\n  form: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.form =\n      this.formTitle === 'Signup'\n        ? this.fb.group({\n            name: ['', [Validators.required]],\n            email: ['', [Validators.required]],\n            password: ['', [Validators.required]],\n          })\n        : this.fb.group({\n            email: ['', [Validators.required]],\n            password: ['', [Validators.required]],\n          });\n  }\n\n  onFormSubmit() {\n    this.form.markAllAsTouched();\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.formSubmiited.emit(this.form.value);\n  }\n}\n","<mat-card>\n  <form [formGroup]=\"form\" (ngSubmit)=\"onFormSubmit()\" #formDirective=\"ngForm\">\n    <mat-card-title>{{ formTitle }}</mat-card-title>\n\n    <ng-container *ngIf=\"formTitle === 'Signup'\">\n      <mat-form-field>\n        <input matInput formControlName=\"name\" placeholder=\"Name\" />\n      </mat-form-field>\n\n      <mat-error *ngIf=\"form.get('name').errors && form.get('name').touched\">\n        <ng-container *ngIf=\"form.get('name').getError('required')\">\n          Name is required\n        </ng-container>\n      </mat-error>\n    </ng-container>\n\n    <mat-form-field>\n      <input\n        matInput\n        type=\"email\"\n        formControlName=\"email\"\n        placeholder=\"Email\"\n      />\n    </mat-form-field>\n\n    <mat-error *ngIf=\"form.get('email').errors && form.get('email').touched\">\n      <ng-container *ngIf=\"form.get('email').getError('required')\">\n        email is required\n      </ng-container>\n    </mat-error>\n\n    <mat-form-field>\n      <input\n        type=\"password\"\n        matInput\n        formControlName=\"password\"\n        placeholder=\"Password\"\n      />\n    </mat-form-field>\n\n    <mat-error\n      *ngIf=\"form.get('password').errors && form.get('password').touched\"\n    >\n      <ng-container *ngIf=\"form.get('password').getError('required')\">\n        password is required\n      </ng-container>\n    </mat-error>\n\n    <mat-error *ngIf=\"errorMessage\">{{ errorMessage }}</mat-error>\n\n    <div class=\"card-actions\">\n      <button color=\"primary\" mat-raised-button type=\"submit\">\n        {{ formTitle }}\n      </button>\n    </div>\n  </form>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AngularMaterialModule } from 'src/app/angular-material.module';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SharedModule } from 'src/app/shared-module/shared.module';\nimport { AuthFormComponent } from './auth-form/auth-form.component';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent, AuthFormComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    SharedModule,\n  ],\n})\nexport class AuthModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nimport { AuthFormValues, User } from 'src/app/interfaces/auth.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private readonly url = '/api/user';\n  private tokenTimer: any;\n  isLoggedIn$ = new BehaviorSubject<boolean>(null);\n  user$ = new BehaviorSubject<User>(null);\n  error$ = new Subject<string>();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  login(credentials: AuthFormValues) {\n    this.http.post<User>(`${this.url}/login`, credentials).subscribe(\n      (user) => {\n        this.isLoggedIn$.next(true);\n        this.user$.next(user);\n        this.error$.next('');\n\n        this.setTokenTimerAndSaveAuthToStorage(\n          user.userToken.expiresIn,\n          user.userToken.token\n        );\n\n        this.router.navigate(['./', 'posts'], {\n          relativeTo: this.route,\n        });\n      },\n      (error) => {\n        this.error$.next(error.error.message);\n      }\n    );\n  }\n\n  signup(credentials: AuthFormValues) {\n    this.http.post<User>(this.url, credentials).subscribe(\n      (user) => {\n        this.isLoggedIn$.next(true);\n        this.user$.next(user);\n\n        this.setTokenTimerAndSaveAuthToStorage(\n          user.userToken.expiresIn,\n          user.userToken.token\n        );\n\n        this.router.navigate(['../', 'posts'], {\n          relativeTo: this.route,\n        });\n      },\n      (error) => {\n        this.error$.next(error.error.message);\n      }\n    );\n  }\n\n  getMyProfile() {\n    this.http.get<User>(`${this.url}/me`).subscribe((user) => {\n      this.user$.next(user);\n    });\n  }\n\n  signout() {\n    localStorage.removeItem('userToken');\n\n    this.isLoggedIn$.next(false);\n\n    this.router.navigate(['/']);\n\n    clearTimeout(this.tokenTimer);\n  }\n\n  checkAuth() {\n    const userToken = JSON.parse(localStorage.getItem('userToken'));\n\n    if (!userToken) {\n      return;\n    }\n\n    const now = new Date();\n    const expiresInMs =\n      new Date(userToken.expirationDate).getTime() - now.getTime();\n\n    if (expiresInMs > 0) {\n      this.isLoggedIn$.next(true);\n      this.setTokenTimer(expiresInMs);\n      this.getMyProfile();\n    } else {\n      this.signout();\n    }\n  }\n\n  setTokenTimerAndSaveAuthToStorage(expiresIn: number, token: string) {\n    const expiresInMs = +expiresIn * 1000;\n    this.setTokenTimer(expiresInMs);\n    this.saveAuthToStorage(token, expiresInMs);\n  }\n\n  private saveAuthToStorage(token: string, expiresIn: number) {\n    const now = new Date();\n    const expiration = new Date(now.getTime() + expiresIn);\n\n    const expirationDate = expiration.toISOString();\n\n    localStorage.setItem(\n      'userToken',\n      JSON.stringify({ token, expirationDate })\n    );\n  }\n\n  private setTokenTimer(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.signout();\n    }, duration);\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  errorMessage: string;\n  errorSub: Subscription;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.errorSub = this.authService.error$.subscribe((errorMessage) => {\n      this.loading = false;\n      this.errorMessage = errorMessage;\n    });\n  }\n\n  login(formValues) {\n    this.loading = true;\n    this.authService.login(formValues);\n  }\n\n  ngOnDestroy() {\n    this.errorSub.unsubscribe();\n  }\n}\n","<app-spinner *ngIf=\"loading\"></app-spinner>\n<app-auth-form\n  [errorMessage]=\"errorMessage\"\n  formTitle=\"Login\"\n  (formSubmiited)=\"login($event)\"\n></app-auth-form>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthFormValues } from 'src/app/interfaces/auth.model';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  errorMessage: string;\n  errorSub: Subscription;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.errorSub = this.authService.error$.subscribe((errorMessage) => {\n      this.loading = false;\n      this.errorMessage = errorMessage;\n    });\n  }\n\n  signup(formValues: AuthFormValues) {\n    this.loading = true;\n\n    this.authService.signup(formValues);\n  }\n\n  ngOnDestroy() {\n    this.errorSub.unsubscribe();\n  }\n}\n","<app-spinner *ngIf=\"loading\"></app-spinner>\n<app-auth-form\n  [errorMessage]=\"errorMessage\"\n  formTitle=\"Signup\"\n  (formSubmiited)=\"signup($event)\"\n></app-auth-form>\n","import { Injectable } from '@angular/core';\nimport {\n  CanLoad,\n  Route,\n  UrlSegment,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take, tap } from 'rxjs/operators';\nimport { AuthService } from '../feature-modules/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanLoad {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.authService.isLoggedIn$.pipe(\n      map((user) => (user ? true : false)),\n      take(1),\n      tap((isLoggedin) => {\n        if (!isLoggedin) {\n          this.router.navigate(['/']);\n        }\n      })\n    );\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/feature-modules/auth/auth.service';\nimport { User } from 'src/app/interfaces/auth.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  isLoggedIn: boolean;\n  loggedInUser: User;\n  private authSub: Subscription;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.authSub = this.authService.isLoggedIn$.subscribe((isLoggedIn) => {\n      this.isLoggedIn = isLoggedIn;\n    });\n  }\n\n  onSignout() {\n    this.authService.signout();\n  }\n\n  ngOnDestroy() {\n    this.authSub.unsubscribe();\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>\n    <a [routerLink]=\"isLoggedIn ? ['/posts'] : ['/']\">Facebook clone</a>\n  </span>\n  <span class=\"space\"></span>\n  <ul>\n    <ng-container *ngIf=\"isLoggedIn\">\n      <li>\n        <a\n          mat-button\n          [routerLink]=\"['./', 'profile']\"\n          routerLinkActive=\"mat-accent\"\n        >\n          <mat-icon>account_circle</mat-icon>\n        </a>\n      </li>\n      <li>\n        <a\n          mat-button\n          [routerLink]=\"['./', 'posts']\"\n          routerLinkActive=\"mat-accent\"\n        >\n          <mat-icon>home</mat-icon>\n        </a>\n      </li>\n    </ng-container>\n    <ng-container *ngIf=\"!isLoggedIn\">\n      <li>\n        <a\n          mat-button\n          [routerLink]=\"['./']\"\n          routerLinkActive=\"mat-accent\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n        >\n          Login\n        </a>\n      </li>\n      <li>\n        <a mat-button [routerLink]=\"['./signup']\" routerLinkActive=\"mat-accent\">\n          Signup\n        </a>\n      </li>\n    </ng-container>\n    <li *ngIf=\"isLoggedIn\">\n      <a mat-button (click)=\"onSignout()\">Signout</a>\n    </li>\n  </ul>\n</mat-toolbar>\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const userToken = JSON.parse(localStorage.getItem('userToken'));\n\n    if (userToken) {\n      const modifiedRequest = req.clone({\n        headers: req.headers.append(\n          'Authorization',\n          `Bearer ${userToken.token}`\n        ),\n      });\n      return next.handle(modifiedRequest);\n    }\n\n    return next.handle(req);\n  }\n}\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ErrorService } from '../error.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private errorService: ErrorService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        this.errorService.error$.next(error);\n\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css'],\n})\nexport class ErrorComponent implements OnInit {\n  @Input() errorMessage: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onCloseError() {\n    this.errorMessage = '';\n  }\n}\n","<mat-card *ngIf=\"errorMessage\">\n  <p>Error occurred: {{ errorMessage }}</p>\n  <button align=\"end\" mat-raised-button (click)=\"onCloseError()\">Close</button>\n</mat-card>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { User } from 'src/app/interfaces/auth.model';\nimport { Post } from '../../interfaces/post.model';\n\nimport { mimeType } from '../../validators/mime-type.validator';\n\n@Component({\n  selector: 'app-post-form',\n  templateUrl: './post-form.component.html',\n  styleUrls: ['./post-form.component.css'],\n})\nexport class PostFormComponent implements OnInit, OnChanges {\n  @Input() loggedInUser: User;\n  @Input() initialFormValue = {\n    title: '',\n    content: '',\n    image: '',\n  };\n\n  @Output() formSubmitted = new EventEmitter<Post>();\n\n  form: FormGroup = this.fb.group({\n    title: [this.initialFormValue.title, [Validators.required]],\n    content: [this.initialFormValue.content, [Validators.required]],\n    image: [null, null, [mimeType]],\n  });\n\n  imagePreview: string;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const propName in changes) {\n      if (changes.hasOwnProperty(propName)) {\n        switch (propName) {\n          case 'initialFormValue':\n            return this.setFormValue();\n        }\n      }\n    }\n  }\n\n  setFormValue() {\n    this.form.patchValue({\n      title: this.initialFormValue.title,\n      content: this.initialFormValue.content,\n      image: this.initialFormValue.image,\n    });\n    this.imagePreview = this.initialFormValue.image;\n  }\n\n  onUploadImage(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    const reader = new FileReader();\n\n    if (file) {\n      this.form.patchValue({ image: file });\n      this.form.get('image').updateValueAndValidity();\n\n      reader.onload = (e) => {\n        this.imagePreview = e.target.result as string;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  onFormSubmit() {\n    this.form.markAllAsTouched();\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    const post: Post = this.form.value;\n\n    this.formSubmitted.emit(post);\n  }\n}\n","<mat-card>\n  <mat-card-header>\n    <img mat-card-avatar [src]=\"loggedInUser.avatar\" />\n    <mat-card-title>{{ loggedInUser.name }}</mat-card-title>\n  </mat-card-header>\n\n  <form [formGroup]=\"form\" (ngSubmit)=\"onFormSubmit()\" #formDirective=\"ngForm\">\n    <mat-form-field>\n      <input matInput formControlName=\"title\" placeholder=\"Post Title\" />\n    </mat-form-field>\n\n    <mat-error *ngIf=\"form.get('title').errors && form.get('title').touched\">\n      <ng-container *ngIf=\"form.get('title').getError('required')\">\n        title is required\n      </ng-container>\n    </mat-error>\n\n    <mat-form-field>\n      <textarea\n        matInput\n        formControlName=\"content\"\n        placeholder=\"Post Content\"\n      ></textarea>\n    </mat-form-field>\n\n    <mat-error\n      *ngIf=\"form.get('content').errors && form.get('content').touched\"\n    >\n      <ng-container *ngIf=\"form.get('content').getError('required')\">\n        content is required\n      </ng-container>\n    </mat-error>\n\n    <div class=\"image-preview\" *ngIf=\"imagePreview\">\n      <img [src]=\"imagePreview\" [alt]=\"form.value.title\" />\n    </div>\n\n    <div class=\"post-form-actions\">\n      <button mat-button type=\"button\" (click)=\"fileInput.click()\">\n        <mat-icon color=\"warn\">insert_photo</mat-icon>\n      </button>\n      <input hidden type=\"file\" #fileInput (change)=\"onUploadImage($event)\" />\n      <button\n        color=\"primary\"\n        mat-button\n        type=\"submit\"\n        [disabled]=\"form.invalid\"\n      >\n        Post\n      </button>\n    </div>\n  </form>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { AngularMaterialModule } from '../angular-material.module';\n\nimport { PostFormComponent } from './post-form/post-form.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { ErrorComponent } from './error/error.component';\n\n@NgModule({\n  declarations: [PostFormComponent, SpinnerComponent, ErrorComponent],\n  imports: [\n    CommonModule,\n    AngularMaterialModule,\n    ReactiveFormsModule,\n    RouterModule,\n  ],\n  exports: [PostFormComponent, ErrorComponent, SpinnerComponent],\n})\nexport class SharedModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-spinner></mat-spinner>\n\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { Observable, Observer, of } from 'rxjs';\n\nexport const mimeType = (\n  control: AbstractControl\n): Observable<ValidationErrors> => {\n  if (!control.value || typeof control.value === 'string') {\n    return of(null);\n  }\n\n  const file = control.value as File;\n\n  const fileReader = new FileReader();\n\n  const fileReader$ = new Observable((observer: Observer<ValidationErrors>) => {\n    fileReader.addEventListener('loadend', (e) => {\n      const arr = new Uint8Array(e.target.result as ArrayBuffer).subarray(0, 4);\n      let header = '';\n      let isValid = false;\n\n      for (const i of arr) {\n        header += i.toString(16);\n      }\n\n      switch (header) {\n        case '89504e47':\n          isValid = true;\n          break;\n        case 'ffd8ffe0':\n        case 'ffd8ffe1':\n        case 'ffd8ffe2':\n        case 'ffd8ffe3':\n        case 'ffd8ffe8':\n          isValid = true;\n          break;\n        default:\n          isValid = false; // Or you can use the blob.type as fallback\n          break;\n      }\n      if (isValid) {\n        observer.next(null);\n      } else {\n        observer.next({ invalidMimeType: true });\n      }\n      observer.complete();\n    });\n    fileReader.readAsArrayBuffer(file);\n  });\n  return fileReader$;\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}