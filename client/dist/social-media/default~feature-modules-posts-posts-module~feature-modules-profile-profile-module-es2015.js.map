{"version":3,"sources":["./src/app/feature-modules/posts/create-post/create-post.component.ts","./src/app/feature-modules/posts/create-post/create-post.component.html","./src/app/feature-modules/posts/edit-post/edit-post.component.ts","./src/app/feature-modules/posts/edit-post/edit-post.component.html","./src/app/feature-modules/posts/post-list-home/post-list-home.component.ts","./src/app/feature-modules/posts/post-list-home/post-list-home.component.html","./src/app/feature-modules/posts/post-list/post-list.component.ts","./src/app/feature-modules/posts/post-list/post-list.component.html","./src/app/feature-modules/posts/posts-routing.module.ts","./src/app/feature-modules/posts/posts.module.ts","./src/app/feature-modules/posts/posts.service.ts"],"names":[],"mappings":"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","file":"default~feature-modules-posts-posts-module~feature-modules-profile-profile-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/interfaces/auth.model';\n\nimport { PostsService } from '../posts.service';\nimport { AuthService } from 'src/app/feature-modules/auth/auth.service';\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css'],\n})\nexport class CreatePostComponent implements OnInit {\n  loggedInUser: User;\n  initialFormValue = {\n    title: '',\n    content: '',\n    image: '',\n  };\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private postsService: PostsService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.authService.user$.subscribe((userProfile) => {\n      this.loggedInUser = userProfile;\n    });\n  }\n\n  onCreatePost(post) {\n    this.postsService.createPost(post).subscribe(() => {\n      this.router.navigate(['./'], {\n        relativeTo: this.route,\n        queryParams: {\n          ts: Date.now().toString(),\n        },\n        queryParamsHandling: 'merge',\n        skipLocationChange: true,\n      });\n    });\n  }\n}\n","<app-post-form\n  [loggedInUser]=\"loggedInUser\"\n  [initialFormValue]=\"initialFormValue\"\n  (formSubmitted)=\"onCreatePost($event)\"\n></app-post-form>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\nimport { switchMap } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { User } from 'src/app/interfaces/auth.model';\n\nimport { PostsService } from '../posts.service';\nimport { AuthService } from 'src/app/feature-modules/auth/auth.service';\nimport { ErrorService } from 'src/app/error.service';\n\n@Component({\n  selector: 'app-edit-post',\n  templateUrl: './edit-post.component.html',\n  styleUrls: ['./edit-post.component.css'],\n})\nexport class EditPostComponent implements OnInit, OnDestroy {\n  loggedInUser: User;\n  initialFormValue = {\n    title: '',\n    content: '',\n    image: '',\n  };\n  postId: string;\n  loading: boolean;\n  errorMessage: string;\n  errorSub: Subscription;\n  authSub: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private postsService: PostsService,\n    private authService: AuthService,\n    private errorService: ErrorService\n  ) {}\n\n  ngOnInit(): void {\n    this.errorSub = this.errorService.error$.subscribe((error) => {\n      this.errorMessage = error.error.message;\n    });\n\n    this.authSub = this.authService.user$.subscribe((user) => {\n      this.loggedInUser = user;\n    });\n\n    this.route.paramMap\n      .pipe(\n        switchMap((pm: ParamMap) => {\n          this.postId = pm.get('id');\n\n          this.loading = true;\n          return this.postsService.getPost(this.postId);\n        })\n      )\n      .subscribe((postValue) => {\n        this.initialFormValue = postValue;\n\n        this.loading = false;\n      });\n  }\n\n  onEditPost(postValue) {\n    this.postsService.updateMyPost(this.postId, postValue).subscribe(() => {\n      this.router.navigate(['../../'], { relativeTo: this.route });\n    });\n  }\n\n  ngOnDestroy() {\n    this.errorSub.unsubscribe();\n    this.authSub.unsubscribe();\n  }\n}\n","<app-spinner *ngIf=\"loading\"></app-spinner>\n<app-error [errorMessage]=\"errorMessage\"></app-error>\n<app-post-form\n  *ngIf=\"!loading\"\n  [loggedInUser]=\"loggedInUser\"\n  [initialFormValue]=\"initialFormValue\"\n  (formSubmitted)=\"onEditPost($event)\"\n></app-post-form>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { User } from 'src/app/interfaces/auth.model';\nimport { Page } from 'src/app/interfaces/page.model';\nimport { Post } from 'src/app/interfaces/post.model';\n\nimport { PostsService } from '../posts.service';\nimport { AuthService } from 'src/app/feature-modules/auth/auth.service';\nimport { ErrorService } from 'src/app/error.service';\n\n@Component({\n  selector: 'app-post-list-home',\n  templateUrl: './post-list-home.component.html',\n  styleUrls: ['./post-list-home.component.css'],\n})\nexport class PostListHomeComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n  page: Page = {\n    pageSize: 3,\n    currentPage: 1,\n    totalData: 0,\n    totalPage: 0,\n  };\n  loading: boolean;\n  loggedinUser: User;\n  errorMessage: string;\n\n  private userSub: Subscription;\n  private errorSub: Subscription;\n\n  constructor(\n    private postsService: PostsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private errorService: ErrorService\n  ) {}\n\n  ngOnInit(): void {\n    this.userSub = this.authService.user$.subscribe((user) => {\n      this.loggedinUser = user;\n    });\n\n    this.errorSub = this.errorService.error$.subscribe((error) => {\n      this.loading = false;\n      this.errorMessage = error.error.message;\n    });\n\n    this.route.queryParamMap\n      .pipe(\n        switchMap((qp: ParamMap) => {\n          const currentPage = +qp.get('page') || this.page.currentPage;\n          const pageSize = +qp.get('pageSize') || this.page.pageSize;\n          this.loading = true;\n          return this.postsService.getPosts(currentPage, pageSize);\n        })\n      )\n      .subscribe((res) => {\n        this.posts = res.data;\n        this.page = res.page;\n        this.loading = false;\n      });\n  }\n\n  onDeletePost(id: string) {\n    this.loading = true;\n    this.errorMessage = '';\n    this.postsService.deleteMyPost(id).subscribe((deletedPost) => {\n      this.posts = this.posts.filter((post) => post._id !== deletedPost._id);\n      this.loading = false;\n\n      this.reloadPage();\n    });\n  }\n\n  onChangePage(e: PageEvent) {\n    this.router.navigate(['./'], {\n      relativeTo: this.route,\n      queryParams: {\n        page: e.pageIndex + 1,\n        pageSize: e.pageSize,\n      },\n    });\n  }\n\n  ngOnDestroy() {\n    this.userSub.unsubscribe();\n    this.errorSub.unsubscribe();\n  }\n\n  private reloadPage() {\n    this.router.navigate(['./'], {\n      relativeTo: this.route,\n      queryParams: {\n        ts: Date.now().toString(),\n      },\n      queryParamsHandling: 'merge',\n      skipLocationChange: true,\n    });\n  }\n}\n","<app-spinner *ngIf=\"loading\"></app-spinner>\n<ng-container *ngIf=\"loggedinUser && !loading\">\n  <app-error *ngIf=\"errorMessage\" [errorMessage]=\"errorMessage\"></app-error>\n  <app-create-post></app-create-post>\n  <app-post-list\n    [posts]=\"posts\"\n    [loggedinUser]=\"loggedinUser\"\n    (deleteClicked)=\"onDeletePost($event)\"\n  ></app-post-list>\n</ng-container>\n<mat-paginator\n  [length]=\"page.totalData\"\n  [pageSize]=\"page.pageSize\"\n  [pageSizeOptions]=\"[1, 3, 5]\"\n  (page)=\"onChangePage($event)\"\n>\n</mat-paginator>\n\n<p class=\"mat-body-1 info-text\" *ngIf=\"posts.length <= 0 && !loading\">\n  No posts added yet.\n</p>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { User } from 'src/app/interfaces/auth.model';\nimport { Post } from 'src/app/interfaces/post.model';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css'],\n})\nexport class PostListComponent implements OnInit {\n  @Input() posts: Post[];\n  @Input() loggedinUser: User;\n  @Output() deleteClicked = new EventEmitter<string>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onDeleteClick(id: string) {\n    this.deleteClicked.emit(id);\n  }\n}\n","<div *ngFor=\"let post of posts\" class=\"container\">\n  <mat-card>\n    <mat-card-header>\n      <img mat-card-avatar [src]=\"post.user.avatar\" />\n      <mat-card-title>{{ post.user.name }}</mat-card-title>\n      <mat-card-subtitle>{{ post.createdAt | date }}</mat-card-subtitle>\n\n      <button\n        *ngIf=\"loggedinUser._id === post.user._id\"\n        mat-icon-button\n        [matMenuTriggerFor]=\"more_options\"\n      >\n        <mat-icon>more_horiz</mat-icon>\n      </button>\n      <mat-menu #more_options=\"matMenu\">\n        <a\n          mat-menu-item\n          [routerLink]=\"['./', post._id, 'edit']\"\n          routerLinkActive=\"router-link-active\"\n        >\n          Edit\n        </a>\n        <button mat-menu-item color=\"warn\" (click)=\"onDeleteClick(post._id)\">\n          Delete\n        </button>\n      </mat-menu>\n    </mat-card-header>\n    <mat-card-content>\n      <h3>{{ post.title }}</h3>\n      <p>\n        {{ post.content }}\n      </p>\n    </mat-card-content>\n    <ng-container class=\"image\">\n      <img\n        *ngIf=\"post.image\"\n        [src]=\"post.image\"\n        [alt]=\"post.title\"\n        mat-card-image\n      />\n    </ng-container>\n    <mat-card-actions align=\"end\">\n      <button mat-button>LIKE</button>\n      <button mat-button>SHARE</button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPostComponent } from './edit-post/edit-post.component';\nimport { PostListHomeComponent } from './post-list-home/post-list-home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostListHomeComponent,\n  },\n  { path: ':id/edit', component: EditPostComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n\n  exports: [RouterModule],\n})\nexport class PostsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { PostsRoutingModule } from './posts-routing.module';\nimport { AngularMaterialModule } from 'src/app/angular-material.module';\nimport { SharedModule } from 'src/app/shared-module/shared.module';\n\nimport { CreatePostComponent } from './create-post/create-post.component';\nimport { PostListComponent } from './post-list/post-list.component';\nimport { EditPostComponent } from './edit-post/edit-post.component';\nimport { PostListHomeComponent } from './post-list-home/post-list-home.component';\n\n@NgModule({\n  declarations: [\n    CreatePostComponent,\n    PostListComponent,\n    EditPostComponent,\n    PostListHomeComponent,\n  ],\n  imports: [\n    CommonModule,\n    PostsRoutingModule,\n    AngularMaterialModule,\n    ReactiveFormsModule,\n    SharedModule,\n  ],\n  exports: [PostsRoutingModule, CreatePostComponent, PostListComponent],\n})\nexport class PostsModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Post } from 'src/app/interfaces/post.model';\nimport { Page } from '../../interfaces/page.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostsService {\n  private readonly url = '/api/posts';\n  token: string;\n\n  constructor(private http: HttpClient) {}\n\n  getMyPosts() {\n    return this.http.get<{ data: Post[] }>(`${this.url}/me`);\n  }\n\n  deleteMyPost(id: string) {\n    return this.http.delete<Post>(`${this.url}/${id}/me`);\n  }\n\n  updateMyPost(postId: string, post: Post) {\n    let postData: Post | FormData;\n\n    if (typeof post.image === 'string') {\n      postData = post;\n    }\n\n    if (typeof post.image === 'object') {\n      postData = new FormData();\n\n      postData.append('title', post.title);\n      postData.append('content', post.content);\n      postData.append('image', post.image);\n    }\n\n    return this.http.put(`${this.url}/${postId}/me`, postData);\n  }\n\n  getPost(id: string) {\n    return this.http.get<Post>(`${this.url}/${id}`);\n  }\n\n  getPosts(page: number, pageSize: number) {\n    return this.http.get<{ data: Post[]; page: Page }>(\n      `${this.url}?page=${page}&pageSize=${pageSize}`\n    );\n  }\n\n  createPost(post) {\n    const postData = new FormData();\n    postData.append('title', post.title);\n    postData.append('content', post.content);\n    postData.append('image', post.image);\n\n    return this.http.post<Post>(this.url, postData);\n  }\n\n  deletePost(postId: string) {\n    return this.http.delete<Post>(`${this.url}/${postId}`);\n  }\n}\n"],"sourceRoot":"webpack:///"}