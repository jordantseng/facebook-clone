{"version":3,"sources":["./src/app/feature-modules/posts/comments-section/comments-section.component.ts","./src/app/feature-modules/posts/comments-section/comments-section.component.html","./src/app/feature-modules/posts/create-post/create-post.component.ts","./src/app/feature-modules/posts/create-post/create-post.component.html","./src/app/feature-modules/posts/edit-post/edit-post.component.ts","./src/app/feature-modules/posts/edit-post/edit-post.component.html","./src/app/feature-modules/posts/likes-dialog/likes-dialog.component.ts","./src/app/feature-modules/posts/likes-dialog/likes-dialog.component.html","./src/app/feature-modules/posts/post-list-home/post-list-home.component.ts","./src/app/feature-modules/posts/post-list-home/post-list-home.component.html","./src/app/feature-modules/posts/post-list/post-list.component.ts","./src/app/feature-modules/posts/post-list/post-list.component.html","./src/app/feature-modules/posts/posts-routing.module.ts","./src/app/feature-modules/posts/posts.module.ts","./src/app/feature-modules/posts/posts.service.ts"],"names":[],"mappings":"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","file":"default~feature-modules-posts-posts-module~feature-modules-profile-profile-module-es2015.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { User } from 'src/app/interfaces/auth.model';\nimport { Comment, Post } from 'src/app/interfaces/post.model';\nimport { PostsService } from '../posts.service';\n\n@Component({\n  selector: 'app-comments-section',\n  templateUrl: './comments-section.component.html',\n  styleUrls: ['./comments-section.component.css'],\n})\nexport class CommentsSectionComponent implements OnInit {\n  @Input() comments: Comment[];\n  @Input() post: Post;\n  @Input() loggedinUser: User;\n\n  form: FormGroup;\n\n  constructor(private fb: FormBuilder, private postsService: PostsService) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({ comment: [''] });\n  }\n\n  onDeleteComment(commentId: string) {\n    this.postsService.deleteComment(this.post._id, commentId);\n  }\n\n  onSubmitComment() {\n    this.postsService.createComment(\n      this.form.value,\n      this.post._id,\n      this.loggedinUser\n    );\n\n    this.form.get('comment').setValue('');\n  }\n}\n","<mat-divider></mat-divider>\n<form\n  class=\"example-form\"\n  [formGroup]=\"form\"\n  (keydown.enter)=\"onSubmitComment()\"\n>\n  <app-input\n    [control]=\"form.get('comment')\"\n    label=\"Leave a comment\"\n  ></app-input>\n</form>\n\n<div *ngFor=\"let comment of comments\" style=\"padding: 1rem 0; display: flex\">\n  <img\n    style=\"display: block; margin-right: 1rem\"\n    mat-card-avatar\n    [src]=\"loggedinUser.avatar\"\n  />\n\n  <div style=\"flex: 3\">\n    <strong>{{ loggedinUser.name }}</strong>\n    <div>\n      {{ comment.content }}\n    </div>\n  </div>\n\n  <div>\n    <app-util-buttons *ngIf=\"loggedinUser._id === comment.user\" [post]=\"post\">\n      <button mat-menu-item color=\"warn\" (click)=\"onDeleteComment(comment._id)\">\n        Delete\n      </button>\n    </app-util-buttons>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/interfaces/auth.model';\n\nimport { PostsService } from '../posts.service';\nimport { AuthService } from 'src/app/feature-modules/auth/auth.service';\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css'],\n})\nexport class CreatePostComponent implements OnInit {\n  loggedInUser: User;\n  initialFormValue = {\n    title: '',\n    content: '',\n    image: '',\n  };\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private postsService: PostsService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.authService.user$.subscribe((userProfile) => {\n      this.loggedInUser = userProfile;\n    });\n  }\n\n  onCreatePost(post) {\n    this.postsService.createPost(post).subscribe(() => {\n      this.router.navigate(['./'], {\n        relativeTo: this.route,\n        queryParams: {\n          ts: Date.now().toString(),\n        },\n        queryParamsHandling: 'merge',\n        skipLocationChange: true,\n      });\n    });\n  }\n}\n","<app-post-form\n  [loggedInUser]=\"loggedInUser\"\n  [initialFormValue]=\"initialFormValue\"\n  (formSubmitted)=\"onCreatePost($event)\"\n></app-post-form>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\nimport { switchMap } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { User } from 'src/app/interfaces/auth.model';\n\nimport { PostsService } from '../posts.service';\nimport { AuthService } from 'src/app/feature-modules/auth/auth.service';\nimport { ErrorService } from 'src/app/error.service';\n\n@Component({\n  selector: 'app-edit-post',\n  templateUrl: './edit-post.component.html',\n  styleUrls: ['./edit-post.component.css'],\n})\nexport class EditPostComponent implements OnInit, OnDestroy {\n  loggedInUser: User;\n  initialFormValue = {\n    title: '',\n    content: '',\n    image: '',\n  };\n  postId: string;\n  loading: boolean;\n  errorMessage: string;\n  errorSub: Subscription;\n  authSub: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private postsService: PostsService,\n    private authService: AuthService,\n    private errorService: ErrorService\n  ) {}\n\n  ngOnInit(): void {\n    this.errorSub = this.errorService.error$.subscribe((error) => {\n      this.errorMessage = error.error.message;\n    });\n\n    this.authSub = this.authService.user$.subscribe((user) => {\n      this.loggedInUser = user;\n    });\n\n    this.route.paramMap\n      .pipe(\n        switchMap((pm: ParamMap) => {\n          this.postId = pm.get('id');\n\n          this.loading = true;\n          return this.postsService.fetchPost(this.postId);\n        })\n      )\n      .subscribe((postValue) => {\n        this.initialFormValue = postValue;\n\n        this.loading = false;\n      });\n  }\n\n  onEditPost(postValue) {\n    this.postsService.updateMyPost(this.postId, postValue).subscribe(() => {\n      this.router.navigate(['../../'], { relativeTo: this.route });\n    });\n  }\n\n  ngOnDestroy() {\n    this.errorSub.unsubscribe();\n    this.authSub.unsubscribe();\n  }\n}\n","<app-spinner *ngIf=\"loading\"></app-spinner>\n<app-error [errorMessage]=\"errorMessage\"></app-error>\n<app-post-form\n  *ngIf=\"!loading\"\n  [loggedInUser]=\"loggedInUser\"\n  [initialFormValue]=\"initialFormValue\"\n  (formSubmitted)=\"onEditPost($event)\"\n></app-post-form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { PostsService } from '../posts.service';\n\n@Component({\n  selector: 'app-likes-dialog',\n  templateUrl: './likes-dialog.component.html',\n  styleUrls: ['./likes-dialog.component.css'],\n})\nexport class LikesDialogComponent implements OnInit {\n  postId: string;\n  loading: boolean;\n  users: { _id: string; name: string; avatar: string }[];\n\n  constructor(\n    private dialogRef: MatDialogRef<LikesDialogComponent>,\n    private postsService: PostsService,\n    @Inject(MAT_DIALOG_DATA) data\n  ) {\n    this.postId = data.postId;\n  }\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.postsService.getLikes(this.postId).subscribe((users) => {\n      this.loading = false;\n      this.users = users;\n    });\n  }\n}\n","<app-spinner *ngIf=\"loading\"></app-spinner>\n<ng-container *ngIf=\"!loading\">\n  <div\n    *ngFor=\"let user of users\"\n    mat-dialog-content\n    style=\"display: flex; margin-top: 0.5rem\"\n  >\n    <img\n      style=\"display: block; margin-right: 1rem\"\n      mat-card-avatar\n      [src]=\"user.avatar\"\n    />\n\n    <div style=\"margin: auto 0\">\n      <strong>{{ user.name }}</strong>\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { User } from 'src/app/interfaces/auth.model';\nimport { Page } from 'src/app/interfaces/page.model';\nimport { Post } from 'src/app/interfaces/post.model';\n\nimport { PostsService } from '../posts.service';\nimport { AuthService } from 'src/app/feature-modules/auth/auth.service';\nimport { ErrorService } from 'src/app/error.service';\n\n@Component({\n  selector: 'app-post-list-home',\n  templateUrl: './post-list-home.component.html',\n  styleUrls: ['./post-list-home.component.css'],\n})\nexport class PostListHomeComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n  page: Page = {\n    pageSize: 3,\n    currentPage: 1,\n    totalData: 0,\n    totalPage: 0,\n  };\n\n  loading: boolean;\n  loggedinUser: User;\n  errorMessage: string;\n\n  private userSub: Subscription;\n  private errorSub: Subscription;\n\n  constructor(\n    private postsService: PostsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private errorService: ErrorService\n  ) {}\n\n  ngOnInit(): void {\n    this.userSub = this.authService.user$.subscribe((user) => {\n      this.loggedinUser = user;\n    });\n\n    this.errorSub = this.errorService.error$.subscribe((error) => {\n      this.loading = false;\n      this.errorMessage = error.error.message;\n    });\n\n    this.postsService.posts$.subscribe((posts) => {\n      this.loading = false;\n      this.posts = posts;\n    });\n\n    this.postsService.page$.subscribe((page) => {\n      this.loading = false;\n      this.page = page;\n    });\n\n    this.route.queryParamMap.subscribe((qp: ParamMap) => {\n      const currentPage = +qp.get('page') || this.page.currentPage;\n      const pageSize = +qp.get('pageSize') || this.page.pageSize;\n      this.loading = true;\n      this.postsService.fetchPosts(currentPage, pageSize);\n    });\n  }\n\n  onDeletePost(id: string) {\n    this.loading = true;\n    this.postsService.deleteMyPost(id);\n  }\n\n  onClickLike({ postId }) {\n    this.postsService.likePost(postId, this.loggedinUser._id);\n  }\n\n  onCommentSubmit({ commentValue, postId }) {\n    this.postsService.createComment(commentValue, postId, this.loggedinUser);\n  }\n\n  onChangePage(e: PageEvent) {\n    this.router.navigate(['./'], {\n      relativeTo: this.route,\n      queryParams: {\n        page: e.pageIndex + 1,\n        pageSize: e.pageSize,\n      },\n    });\n  }\n\n  ngOnDestroy() {\n    this.userSub.unsubscribe();\n    this.errorSub.unsubscribe();\n  }\n}\n","<app-spinner *ngIf=\"loading\"></app-spinner>\n<ng-container *ngIf=\"loggedinUser && !loading\">\n  <app-error *ngIf=\"errorMessage\" [errorMessage]=\"errorMessage\"></app-error>\n  <app-create-post></app-create-post>\n  <app-post-list\n    [posts]=\"posts\"\n    [loggedinUser]=\"loggedinUser\"\n    (deleteClicked)=\"onDeletePost($event)\"\n    (commentSubmitted)=\"onCommentSubmit($event)\"\n    (postLiked)=\"onClickLike($event)\"\n  ></app-post-list>\n</ng-container>\n<mat-paginator\n  [length]=\"page?.totalData\"\n  [pageSize]=\"page?.pageSize\"\n  [pageSizeOptions]=\"[1, 3, 5]\"\n  (page)=\"onChangePage($event)\"\n>\n</mat-paginator>\n\n<p class=\"mat-body-1 info-text\" *ngIf=\"posts.length <= 0 && !loading\">\n  No posts added yet.\n</p>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\nimport { User } from 'src/app/interfaces/auth.model';\nimport { Post } from 'src/app/interfaces/post.model';\nimport { LikesDialogComponent } from '../likes-dialog/likes-dialog.component';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css'],\n})\nexport class PostListComponent implements OnInit {\n  @Input() posts: Post[];\n  @Input() loggedinUser: User;\n  @Output() deleteClicked = new EventEmitter<string>();\n  @Output() commentDeleted = new EventEmitter<{\n    postId: string;\n    commentId: string;\n  }>();\n  @Output() postLiked = new EventEmitter<{ postId: string }>();\n\n  commentSection: string;\n\n  constructor(private dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  renderLikes(post) {\n    const alreadyLiked = post.likes.find(\n      (userId) => userId === this.loggedinUser._id\n    );\n\n    if (alreadyLiked) {\n      if (post.likes.length === 1) {\n        return `You like this post`;\n      }\n      return `You and other ${post.likes.length - 1} people like this post`;\n    } else {\n      if (post.likes.length === 0) {\n        return null;\n      }\n      return `${post.likes.length} people like this post`;\n    }\n  }\n\n  renderLikeButton(likes) {\n    return likes.find((id) => id === this.loggedinUser._id)\n      ? 'favorite'\n      : 'favorite_border';\n  }\n\n  renderCommentButton(comments) {\n    if (comments.length > 0) {\n      return `${comments.length} comments`;\n    }\n\n    if (comments.length <= 0) {\n      return 'COMMENT';\n    }\n  }\n\n  openLikesDialog(post) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = { postId: post._id };\n    this.dialog.open(LikesDialogComponent, dialogConfig);\n  }\n\n  onLikeClick(postId: string) {\n    this.postLiked.emit({ postId });\n  }\n\n  onCommentButtonClick(postId: string) {\n    if (this.commentSection !== postId) {\n      this.commentSection = postId;\n    } else {\n      this.commentSection = '';\n    }\n  }\n\n  onDeleteClick(id: string) {\n    this.deleteClicked.emit(id);\n  }\n\n  onDeleteComment(postId: string, commentId: string) {\n    this.commentDeleted.emit({ postId, commentId });\n  }\n}\n","<div *ngFor=\"let post of posts\" class=\"container\">\n  <mat-card>\n    <mat-card-header>\n      <img mat-card-avatar [src]=\"post.user.avatar\" />\n      <mat-card-title>{{ post.user.name }}</mat-card-title>\n      <mat-card-subtitle>{{ post.createdAt | date }}</mat-card-subtitle>\n\n      <app-util-buttons\n        *ngIf=\"loggedinUser._id === post.user._id\"\n        [post]=\"post\"\n      >\n        <a\n          mat-menu-item\n          [routerLink]=\"['./', post._id, 'edit']\"\n          routerLinkActive=\"router-link-active\"\n        >\n          Edit\n        </a>\n        <button mat-menu-item color=\"warn\" (click)=\"onDeleteClick(post._id)\">\n          Delete\n        </button>\n      </app-util-buttons>\n    </mat-card-header>\n\n    <mat-card-content>\n      <h3>{{ post.title }}</h3>\n      <p>\n        {{ post.content }}\n      </p>\n      <div *ngIf=\"post.image\" class=\"image-container\">\n        <img [src]=\"post.image\" [alt]=\"post.title\" mat-card-image />\n      </div>\n    </mat-card-content>\n\n    <mat-card-actions align=\"end\" style=\"margin-bottom: 0\">\n      <div style=\"margin-right: auto\">\n        <button mat-button (click)=\"openLikesDialog(post)\">\n          {{ renderLikes(post) }}\n        </button>\n      </div>\n      <div>\n        <button mat-button (click)=\"onCommentButtonClick(post._id)\">\n          {{ renderCommentButton(post.comments) }}\n        </button>\n        <button mat-button (click)=\"onLikeClick(post._id)\">\n          <mat-icon color=\"warn\">{{ renderLikeButton(post.likes) }}</mat-icon>\n          LIKE\n        </button>\n      </div>\n    </mat-card-actions>\n\n    <app-comments-section\n      *ngIf=\"commentSection === post._id\"\n      [comments]=\"post.comments\"\n      [loggedinUser]=\"loggedinUser\"\n      [post]=\"post\"\n    ></app-comments-section>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPostComponent } from './edit-post/edit-post.component';\nimport { PostListHomeComponent } from './post-list-home/post-list-home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostListHomeComponent,\n  },\n  { path: ':id/edit', component: EditPostComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n\n  exports: [RouterModule],\n})\nexport class PostsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { PostsRoutingModule } from './posts-routing.module';\nimport { AngularMaterialModule } from 'src/app/angular-material.module';\nimport { SharedModule } from 'src/app/shared-module/shared.module';\n\nimport { CreatePostComponent } from './create-post/create-post.component';\nimport { PostListComponent } from './post-list/post-list.component';\nimport { EditPostComponent } from './edit-post/edit-post.component';\nimport { PostListHomeComponent } from './post-list-home/post-list-home.component';\nimport { CommentsSectionComponent } from './comments-section/comments-section.component';\nimport { LikesDialogComponent } from './likes-dialog/likes-dialog.component';\n\n@NgModule({\n  declarations: [\n    CreatePostComponent,\n    PostListComponent,\n    EditPostComponent,\n    PostListHomeComponent,\n    CommentsSectionComponent,\n    LikesDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    PostsRoutingModule,\n    AngularMaterialModule,\n    ReactiveFormsModule,\n    SharedModule,\n  ],\n  exports: [PostsRoutingModule, CreatePostComponent, PostListComponent],\n  entryComponents: [LikesDialogComponent],\n})\nexport class PostsModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Post, Comment } from 'src/app/interfaces/post.model';\nimport { Page } from '../../interfaces/page.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostsService {\n  private readonly url = '/api/posts';\n  token: string;\n\n  posts$: BehaviorSubject<Post[]> = new BehaviorSubject([]);\n  page$: BehaviorSubject<Page> = new BehaviorSubject({\n    pageSize: 3,\n    currentPage: 1,\n    totalData: 0,\n    totalPage: 0,\n  });\n\n  constructor(private http: HttpClient) {}\n\n  private getPosts() {\n    return this.posts$.getValue();\n  }\n\n  fetchMyPosts() {\n    this.http\n      .get<{ data: Post[] }>(`${this.url}/me`)\n      .subscribe(({ data: posts }) => {\n        this.posts$.next(posts);\n      });\n  }\n\n  updateMyPost(postId: string, post: Post) {\n    let postData: Post | FormData;\n\n    if (typeof post.image === 'string') {\n      postData = post;\n    }\n\n    if (typeof post.image === 'object') {\n      postData = new FormData();\n\n      postData.append('title', post.title);\n      postData.append('content', post.content);\n      postData.append('image', post.image);\n    }\n\n    return this.http.put(`${this.url}/${postId}/me`, postData);\n  }\n\n  deleteMyPost(id: string) {\n    // optimistic update\n    const prevPosts = this.posts$.getValue();\n\n    this.posts$.next(this.posts$.getValue().filter((post) => post._id !== id));\n\n    this.http.delete<Post>(`${this.url}/${id}/me`).subscribe(\n      () => {},\n      (error) => {\n        this.posts$.next(prevPosts);\n      }\n    );\n  }\n\n  createPost(post) {\n    const postData = new FormData();\n    postData.append('title', post.title);\n    postData.append('content', post.content);\n    postData.append('image', post.image);\n\n    return this.http.post<Post>(this.url, postData);\n  }\n\n  fetchPost(id: string) {\n    return this.http.get<Post>(`${this.url}/${id}`);\n  }\n\n  deletePost(postId: string) {\n    return this.http.delete<Post>(`${this.url}/${postId}`);\n  }\n\n  fetchPosts(page: number, pageSize: number) {\n    this.http\n      .get<{ data: Post[]; page: Page }>(\n        `${this.url}?page=${page}&pageSize=${pageSize}`\n      )\n      .subscribe((res) => {\n        this.posts$.next(res.data);\n        this.page$.next(res.page);\n      });\n  }\n\n  getLikes(postId) {\n    return this.http.get<{ _id: string; name: string; avatar: string }[]>(\n      `${this.url}/${postId}/like`\n    );\n  }\n\n  likePost(postId: string, userId: string) {\n    // optimistic update\n    const posts = [...this.getPosts()];\n\n    const index = posts.findIndex((post) => post._id === postId);\n\n    const prevLikes = [...posts[index].likes];\n\n    const alreadyLiked = posts[index].likes.find((id) => id === userId);\n\n    if (alreadyLiked) {\n      posts[index].likes = posts[index].likes.filter((id) => id !== userId);\n    } else {\n      posts[index].likes.push(userId);\n    }\n\n    this.posts$.next(posts);\n\n    this.http\n      .patch<string | undefined>(`${this.url}/${postId}/like`, { userId })\n      .subscribe(\n        (res) => {\n          if (!res) {\n            const likeIndex = posts[index].likes.findIndex(\n              (id) => id === userId\n            );\n            posts[index].likes.splice(likeIndex, 1);\n            this.posts$.next(posts);\n          }\n        },\n        (error) => {\n          posts[index].likes = prevLikes;\n\n          this.posts$.next(posts);\n        }\n      );\n  }\n\n  createComment(formValue: any, postId: string, loggedinUser) {\n    const posts = [...this.getPosts()];\n\n    const index = posts.findIndex((p) => p._id === postId);\n\n    const prevComments = [...posts[index].comments];\n\n    posts[index].comments = [\n      ...posts[index].comments,\n      {\n        user: loggedinUser._id,\n        avatar: loggedinUser.avatar,\n        name: loggedinUser.name,\n        content: formValue.comment,\n      },\n    ];\n\n    this.http\n      .post<Comment>(`${this.url}/${postId}/comments`, formValue)\n      .subscribe(\n        (comment) => {\n          const comments = [...posts[index].comments];\n          const lastIndex = comments.length - 1;\n\n          comments[lastIndex] = comment;\n        },\n        (error) => {\n          posts[index].comments = prevComments;\n        }\n      );\n  }\n\n  deleteComment(postId: string, commentId: string) {\n    // optimistic update\n    const posts = [...this.getPosts()];\n\n    const index = posts.findIndex((post) => post._id === postId);\n\n    const prevComments = [...posts[index].comments];\n\n    const filteredComments = posts[index].comments.filter(\n      (comment) => comment._id !== commentId\n    );\n\n    posts[index].comments = filteredComments;\n\n    this.posts$.next(posts);\n\n    this.http\n      .delete<null>(`${this.url}/${postId}/comments/${commentId}`)\n      .subscribe(\n        () => {},\n        (error) => {\n          posts[index].comments = prevComments;\n        }\n      );\n  }\n}\n"],"sourceRoot":"webpack:///"}