{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/error.service.ts","./src/app/feature-modules/auth/auth-form/auth-form.component.ts","./src/app/feature-modules/auth/auth-form/auth-form.component.html","./src/app/feature-modules/auth/auth.module.ts","./src/app/feature-modules/auth/auth.service.ts","./src/app/feature-modules/auth/login/login.component.ts","./src/app/feature-modules/auth/login/login.component.html","./src/app/feature-modules/auth/signup/signup.component.ts","./src/app/feature-modules/auth/signup/signup.component.html","./src/app/guards/auth.guard.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/interceptors/auth.interceptor.ts","./src/app/interceptors/error.interceptor.ts","./src/app/shared-module/error/error.component.ts","./src/app/shared-module/error/error.component.html","./src/app/shared-module/input/input.component.ts","./src/app/shared-module/input/input.component.html","./src/app/shared-module/post-form/post-form.component.ts","./src/app/shared-module/post-form/post-form.component.html","./src/app/shared-module/shared.module.ts","./src/app/shared-module/spinner/spinner.component.ts","./src/app/shared-module/spinner/spinner.component.html","./src/app/shared-module/util-buttons/util-buttons.component.ts","./src/app/shared-module/util-buttons/util-buttons.component.html","./src/app/validators/mime-type.validator.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEoB;AACF;AACJ;AACW;AACT;AACqB;AACvB;AACI;AACA;AACJ;AACU;AACJ;;AAkBtD,MAAM,qBAAqB;;oGAArB,qBAAqB;oKAArB,qBAAqB,kBAd9B,wEAAe;QACf,oEAAa;QACb,+EAAkB;QAClB,sEAAc;QACd,2FAAwB;QACxB,oEAAa;QACb,0EAAgB;QAChB,wEAAe;QACf,wEAAe;QACf,qEAAa;QACb,+EAAkB;QAClB,2EAAgB;mIAGP,qBAAqB,cAd9B,wEAAe;QACf,oEAAa;QACb,+EAAkB;QAClB,sEAAc;QACd,2FAAwB;QACxB,oEAAa;QACb,0EAAgB;QAChB,wEAAe;QACf,wEAAe;QACf,qEAAa;QACb,+EAAkB;QAClB,2EAAgB;6FAGP,qBAAqB;cAhBjC,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,wEAAe;oBACf,oEAAa;oBACb,+EAAkB;oBAClB,sEAAc;oBACd,2FAAwB;oBACxB,oEAAa;oBACb,0EAAgB;oBAChB,wEAAe;oBACf,wEAAe;oBACf,qEAAa;oBACb,+EAAkB;oBAClB,2EAAgB;iBACjB;aACF;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEP;AAE8B;AACG;;;AAEjF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,0FAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,6FAAe,EAAE;IAC9C;QACE,IAAI,EAAE,EAAE;QACR,OAAO,EAAE,CAAC,4DAAS,CAAC;QACpB,YAAY,EAAE,GAAG,EAAE,CACjB,mSAA8C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;KAC5E;IACD;QACE,IAAI,EAAE,SAAS;QACf,OAAO,EAAE,CAAC,4DAAS,CAAC;QACpB,YAAY,EAAE,GAAG,EAAE,CACjB,8XAAkD,CAAC,IAAI,CACrD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,aAAa,CACvB;KACJ;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAQ3C,MAAM,YAAY;IAGvB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,UAAK,GAAG,gBAAgB,CAAC;IAEsB,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;;wEAPU,YAAY;4FAAZ,YAAY;QCRzB,wEAAyB;QACzB,uEACE;QAAA,2EAA+B;QACjC,4DAAO;;6FDKM,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACsC;AACJ;AAE5B;AACa;AAEI;AACR;AACK;AACK;AAEA;AACE;;AA2B7D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAdT;QACT;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,+EAAe;YACzB,KAAK,EAAE,IAAI;SACZ;QACD;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,iFAAgB;YAC1B,KAAK,EAAE,IAAI;SACZ;KACF,YApBQ;YACP,uEAAa;YACb,oEAAgB;YAChB,8EAAqB;YACrB,4FAAuB;YACvB,qEAAgB;YAChB,4EAAU;YACV,yEAAY;SACb;mIAeU,SAAS,mBAxBL,2DAAY,EAAE,wEAAe,aAE1C,uEAAa;QACb,oEAAgB;QAChB,8EAAqB;QACrB,4FAAuB;QACvB,qEAAgB;QAChB,4EAAU;QACV,yEAAY;6FAgBH,SAAS;cAzBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,2DAAY,EAAE,wEAAe,CAAC;gBAC7C,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,8EAAqB;oBACrB,4FAAuB;oBACvB,qEAAgB;oBAChB,4EAAU;oBACV,yEAAY;iBACb;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,sEAAiB;wBAC1B,QAAQ,EAAE,+EAAe;wBACzB,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,sEAAiB;wBAC1B,QAAQ,EAAE,iFAAgB;wBAC1B,KAAK,EAAE,IAAI;qBACZ;iBACF;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACvCD;AAAA;AAAA;AAAA;AAA2C;AACZ;;AAKxB,MAAM,YAAY;IAGvB;QAFA,WAAM,GAAG,IAAI,4CAAO,EAAqB,CAAC;IAE3B,CAAC;;wEAHL,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AACX;;;;;;;;;ICGhE,0EAIa;;;IAFX,6FAA4B;;;IAY9B,4EAAgC;IAAA,uDAAkB;IAAA,4DAAY;;;IAA9B,0DAAkB;IAAlB,qFAAkB;;ADV/C,MAAM,iBAAiB;IAM5B,YAAoB,EAAe;QAAf,OAAE,GAAF,EAAE,CAAa;QAHzB,kBAAa,GAAG,IAAI,0DAAY,EAAO,CAAC;IAGZ,CAAC;IAEvC,QAAQ;QACN,IAAI,CAAC,IAAI;YACP,IAAI,CAAC,SAAS,KAAK,QAAQ;gBACzB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACZ,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;oBACjC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;oBAClC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;iBACtC,CAAC;gBACJ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACZ,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;oBAClC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;iBACtC,CAAC,CAAC;IACX,CAAC;IAED,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAE7B,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;;kFA9BU,iBAAiB;iGAAjB,iBAAiB;QCR9B,2EACE;QAAA,6EACE;QADuB,6IAAY,kBAAc,IAAC;QAClD,iFAAgB;QAAA,uDAAe;QAAA,4DAAiB;QAEhD,yHAIC;QAED,0EAAmE;QAEnE,0EAIa;QAEb,yHAAgC;QAEhC,yEACE;QAAA,6EACE;QAAA,wDACF;QAAA,4DAAS;QACX,4DAAM;QAEN,kEAAW;QACb,4DAAO;QACT,4DAAW;;QA3BH,0DAAkB;QAAlB,+EAAkB;QACN,0DAAe;QAAf,8EAAe;QAG7B,0DAA8B;QAA9B,4FAA8B;QAKrB,0DAA6B;QAA7B,0FAA6B;QAGtC,0DAAgC;QAAhC,6FAAgC;QAKvB,0DAAoB;QAApB,kFAAoB;QAI3B,0DACF;QADE,yFACF;;6FDfO,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;kBAEE,mDAAK;;kBACL,mDAAK;;kBACL,oDAAM;;;;;;;;;;;;;;AEXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACM;AAEmB;AAEf;AACG;AACO;AACC;;AAW7D,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBAPZ;YACP,4DAAY;YACZ,kEAAmB;YACnB,qFAAqB;YACrB,gFAAY;SACb;mIAEU,UAAU,mBARN,qEAAc,EAAE,wEAAe,EAAE,gFAAiB,aAE/D,4DAAY;QACZ,kEAAmB;QACnB,qFAAqB;QACrB,gFAAY;6FAGH,UAAU;cATtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,qEAAc,EAAE,wEAAe,EAAE,gFAAiB,CAAC;gBAClE,OAAO,EAAE;oBACP,4DAAY;oBACZ,kEAAmB;oBACnB,qFAAqB;oBACrB,gFAAY;iBACb;aACF;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGK;;;;AAOzC,MAAM,WAAW;IAOtB,YACU,IAAgB,EAChB,MAAc,EACd,KAAqB;QAFrB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QATd,QAAG,GAAG,WAAW,CAAC;QAEnC,gBAAW,GAAG,IAAI,oDAAe,CAAU,IAAI,CAAC,CAAC;QACjD,UAAK,GAAG,IAAI,oDAAe,CAAO,IAAI,CAAC,CAAC;QACxC,WAAM,GAAG,IAAI,4CAAO,EAAU,CAAC;IAM5B,CAAC;IAEJ,KAAK,CAAC,WAA2B;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,GAAG,IAAI,CAAC,GAAG,QAAQ,EAAE,WAAW,CAAC,CAAC,SAAS,CAC9D,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAErB,IAAI,CAAC,iCAAiC,CACpC,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,SAAS,CAAC,KAAK,CACrB,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;gBAC5B,UAAU,EAAE,IAAI,CAAC,KAAK;aACvB,CAAC,CAAC;QACL,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACxC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,WAA2B;QAChC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,SAAS,CACnD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEtB,IAAI,CAAC,iCAAiC,CACpC,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,SAAS,CAAC,KAAK,CACrB,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;gBAC5B,UAAU,EAAE,IAAI,CAAC,KAAK;aACvB,CAAC,CAAC;QACL,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACxC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACvD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAErC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEjC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;IAED,SAAS;QACP,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QAEhE,IAAI,CAAC,SAAS,EAAE;YACd,OAAO;SACR;QAED,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,MAAM,WAAW,GACf,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QAE/D,IAAI,WAAW,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;IAED,iCAAiC,CAAC,SAAiB,EAAE,KAAa;QAChE,MAAM,WAAW,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAChC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAC7C,CAAC;IAEO,iBAAiB,CAAC,KAAa,EAAE,SAAiB;QACxD,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,CAAC;QAEvD,MAAM,cAAc,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;QAEhD,YAAY,CAAC,OAAO,CAClB,WAAW,EACX,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAC1C,CAAC;IACJ,CAAC;IAEO,aAAa,CAAC,QAAgB;QACpC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,GAAG,EAAE;YAChC,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,EAAE,QAAQ,CAAC,CAAC;IACf,CAAC;;sEAlHU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;;;;ICA7D,yEAA2C;;ADSpC,MAAM,cAAc;IAKzB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YACjE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,UAAU;QACd,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IACrC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;;4EArBU,cAAc;8FAAd,cAAc;QCT3B,0HAA6B;QAC7B,mFAIiB;QADf,mKAAiB,iBAAa,IAAC;QAChC,4DAAgB;;QALJ,6EAAe;QAE1B,0DAA6B;QAA7B,0FAA6B;;6FDOlB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;;;;ICA7D,yEAA2C;;ADUpC,MAAM,eAAe;IAK1B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YACjE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,UAA0B;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;;8EAtBU,eAAe;+FAAf,eAAe;QCV5B,2HAA6B;QAC7B,mFAIiB;QADf,oKAAiB,kBAAc,IAAC;QACjC,4DAAgB;;QALJ,6EAAe;QAE1B,0DAA6B;QAA7B,0FAA6B;;6FDQlB,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAWK;;;;AAMzC,MAAM,SAAS;IACpB,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAExE,OAAO,CACL,KAAY,EACZ,QAAsB;QAEtB,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CACtC,0DAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EACpC,2DAAI,CAAC,CAAC,CAAC,EACP,0DAAG,CAAC,CAAC,UAAU,EAAE,EAAE;YACjB,IAAI,CAAC,UAAU,EAAE;gBACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;kEAhBU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;;;;;;;;;ICMzD,wEACE;IAAA,qEACE;IAAA,uEAKE;IAAA,2EAAU;IAAA,yEAAc;IAAA,4DAAW;IACrC,4DAAI;IACN,4DAAK;IACL,qEACE;IAAA,uEAME;IAAA,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAC3B,4DAAI;IACN,4DAAK;IACP,qEAAe;;IAhBT,0DAAgC;IAAhC,6IAAgC;IAShC,0DAAqB;IAArB,6IAAqB;;;;;IAQ3B,wEACE;IAAA,qEACE;IAAA,uEAME;IAAA,kEACF;IAAA,4DAAI;IACN,4DAAK;IACL,qEACE;IAAA,uEACE;IAAA,mEACF;IAAA,4DAAI;IACN,4DAAK;IACP,qEAAe;;IAZT,0DAA0B;IAA1B,6IAA0B;IAQd,0DAA2B;IAA3B,6IAA2B;;;;IAK7C,qEACE;IAAA,uEAAoC;IAAtB,6SAAqB;IAAC,kEAAO;IAAA,4DAAI;IACjD,4DAAK;;;;ADnCF,MAAM,eAAe;IAK1B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,EAAE;YACnE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;;8EAnBU,eAAe;+FAAf,eAAe;QCX5B,iFACE;QAAA,uEACE;QAAA,uEAAkD;QAAA,uEAAY;QAAA,4DAAI;QACpE,4DAAO;QACP,qEAA2B;QAC3B,qEACE;QAAA,6HACE;QAoBF,6HACE;QAgBF,yGACE;QAEJ,4DAAK;QACP,4DAAc;;QA9CP,0DAA8C;QAA9C,sOAA8C;QAInC,0DAAkB;QAAlB,gFAAkB;QAqBlB,0DAAmB;QAAnB,iFAAmB;QAiB7B,0DAAkB;QAAlB,gFAAkB;;6FDjCb,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAA2C;;AAGpC,MAAM,eAAe;IAC1B;IAAe,CAAC;IAEhB,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAChD,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QAEhE,IAAI,SAAS,EAAE;YACb,MAAM,eAAe,GAAG,GAAG,CAAC,KAAK,CAAC;gBAChC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,CACzB,eAAe,EACf,UAAU,SAAS,CAAC,KAAK,EAAE,CAC5B;aACF,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;SACrC;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;;8EAjBU,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;;;;;;;;;;;;;ACDX;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACT;AACU;;;AAIrC,MAAM,gBAAgB;IAC3B,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAElD,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAChD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAC1B,iEAAU,CAAC,CAAC,KAAwB,EAAE,EAAE;YACtC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAErC,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;gFAXU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAD5B,wDAAU;;;;;;;;;;;;;;ACXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;ICAzD,2EACE;IAAA,oEAAG;IAAA,uDAAkC;IAAA,4DAAI;IACzC,4EAA+D;IAAzB,6TAAwB;IAAC,gEAAK;IAAA,4DAAS;IAC/E,4DAAW;;;IAFN,0DAAkC;IAAlC,8GAAkC;;ADMhC,MAAM,cAAc;IAEzB;IAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;IAEnB,YAAY;QACV,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;;4EARU,cAAc;8FAAd,cAAc;QCP3B,oHACE;;QADQ,kFAAoB;;6FDOjB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;kBAEE,mDAAK;;;;;;;;;;;;;;AERR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;ICCvD,sEAOA;;;IAJE,sFAAqB;;;IAIvB,yEAKY;;;IAFV,sFAAqB;;;IAMvB,wEACE;IAAA,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,qGACF;;;IACA,wEACE;IAAA,+EACF;IAAA,qEAAe;;;IANjB,4EACE;IAAA,wIACE;IAEF,wIACE;IAEJ,4DAAY;;;IANI,0DAAoC;IAApC,sGAAoC;IAGpC,0DAA2C;IAA3C,6GAA2C;;;IAI3D,2EAAkC;IAAA,wEAAa;IAAA,4DAAW;;ADhBnD,MAAM,cAAc;IAKzB;QAFS,SAAI,GAAG,MAAM,CAAC;IAER,CAAC;IAEhB,QAAQ,KAAU,CAAC;;4EAPR,cAAc;8FAAd,cAAc;QCR3B,iFACE;QAAA,8GAOA;QAAA,oHAKC;QACH,4DAAiB;QAEjB,sHACE;QAOF,oHAAkC;;QAtB9B,0DAA8C;QAA9C,gHAA8C;QAO9C,0DAA2B;QAA3B,yFAA2B;QAOpB,0DAAyC;QAAzC,2GAAyC;QAQ1C,0DAAuB;QAAvB,qFAAuB;;6FDhBpB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;kBAEE,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;AEXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQuB;AAC6C;AAIJ;;;;;;;;;ICE5D,0EACE;IAAA,qEACF;IAAA,4DAAM;;;IADC,0DAAoB;IAApB,iJAAoB;;ADIxB,MAAM,iBAAiB;IAgB5B,YAAoB,EAAe;QAAf,OAAE,GAAF,EAAE,CAAa;QAd1B,qBAAgB,GAAG;YAC1B,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;SACV,CAAC;QACQ,kBAAa,GAAG,IAAI,0DAAY,EAAQ,CAAC;QAEnD,SAAI,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,KAAK,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3D,OAAO,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC/D,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,wEAAQ,CAAC,CAAC;SAChC,CAAC,CAAC;IAGmC,CAAC;IAEvC,QAAQ,KAAU,CAAC;IAEnB,WAAW,CAAC,OAAsB;QAChC,KAAK,MAAM,QAAQ,IAAI,OAAO,EAAE;YAC9B,IAAI,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;gBACpC,QAAQ,QAAQ,EAAE;oBAChB,KAAK,kBAAkB;wBACrB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;iBAC9B;aACF;SACF;IACH,CAAC;IAED,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK;YAClC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO;YACtC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK;SACnC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;IAClD,CAAC;IAED,aAAa,CAAC,KAAY;QACxB,MAAM,IAAI,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACzD,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAEhC,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,sBAAsB,EAAE,CAAC;YAEhD,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE;gBACpB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,MAAgB,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC5B;IACH,CAAC;IAED,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAE7B,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,MAAM,IAAI,GAAS,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAEnC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;;kFAjEU,iBAAiB;iGAAjB,iBAAiB;;QCpB9B,2EACE;QAAA,kFACE;QAAA,oEACA;QAAA,iFAAgB;QAAA,uDAAuB;QAAA,4DAAiB;QAC1D,4DAAkB;QAElB,6EACE;QADuB,6IAAY,kBAAc,IAAC;QAClD,0EAAwE;QAExE,0EAIa;QAEb,6GACE;QAGF,0EACE;QAAA,6EACE;QAD+B,wRAAS,WAAiB,IAAC;QAC1D,+EAAuB;QAAA,wEAAY;QAAA,4DAAW;QAChD,4DAAS;QACT,gFACA;QADqC,iJAAU,yBAAqB,IAAC;QAArE,4DACA;QAAA,8EAME;QAAA,kEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAW;;QAhCc,0DAA2B;QAA3B,qJAA2B;QAChC,0DAAuB;QAAvB,sFAAuB;QAGnC,0DAAkB;QAAlB,+EAAkB;QACX,0DAA6B;QAA7B,0FAA6B;QAGtC,0DAA+B;QAA/B,4FAA+B;QAKN,0DAAoB;QAApB,kFAAoB;QAa3C,0DAAyB;QAAzB,sFAAyB;;6FDRpB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;kBAEE,mDAAK;;kBACL,mDAAK;;kBAKL,oDAAM;;;;;;;;;;;;;;AE3BT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACM;AACN;AAEoB;AAEC;AACL;AACN;AACoB;AACpB;;AAwBlD,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,kBAdd;YACP,4DAAY;YACZ,8EAAqB;YACrB,kEAAmB;YACnB,4DAAY;SACb;mIASU,YAAY,mBApBrB,gFAAiB;QACjB,2EAAgB;QAChB,qEAAc;QACd,yFAAoB;QACpB,qEAAc,aAGd,4DAAY;QACZ,8EAAqB;QACrB,kEAAmB;QACnB,4DAAY,aAGZ,gFAAiB;QACjB,qEAAc;QACd,2EAAgB;QAChB,yFAAoB;QACpB,qEAAc;6FAGL,YAAY;cAtBxB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,gFAAiB;oBACjB,2EAAgB;oBAChB,qEAAc;oBACd,yFAAoB;oBACpB,qEAAc;iBACf;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,8EAAqB;oBACrB,kEAAmB;oBACnB,4DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,gFAAiB;oBACjB,qEAAc;oBACd,2EAAgB;oBAChB,yFAAoB;oBACpB,qEAAc;iBACf;aACF;;;;;;;;;;;;;;AClCD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,gBAAgB;IAE3B;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,yEAA2B;;6FDOd,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;AAQlD,MAAM,oBAAoB;IAG/B;IAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;;wFALR,oBAAoB;oGAApB,oBAAoB;;QCRjC,4EACE;QAAA,2EAAU;QAAA,qEAAU;QAAA,4DAAW;QACjC,4DAAS;QACT,oFACE;QAAA,6DAAY;QACd,4DAAW;;;QALa,mFAAkC;;6FDQ7C,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;kBAEE,mDAAK;;;;;;;;;;;;;;AERR;AAAA;AAAA;AAAgD;AAEzC,MAAM,QAAQ,GAAG,CACtB,OAAwB,EACM,EAAE;IAChC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;QACvD,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;KACjB;IAED,MAAM,IAAI,GAAG,OAAO,CAAC,KAAa,CAAC;IAEnC,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;IAEpC,MAAM,WAAW,GAAG,IAAI,+CAAU,CAAC,CAAC,QAAoC,EAAE,EAAE;QAC1E,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;YAC3C,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,MAAqB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1E,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,IAAI,OAAO,GAAG,KAAK,CAAC;YAEpB,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;gBACnB,MAAM,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC1B;YAED,QAAQ,MAAM,EAAE;gBACd,KAAK,UAAU;oBACb,OAAO,GAAG,IAAI,CAAC;oBACf,MAAM;gBACR,KAAK,UAAU,CAAC;gBAChB,KAAK,UAAU,CAAC;gBAChB,KAAK,UAAU,CAAC;gBAChB,KAAK,UAAU,CAAC;gBAChB,KAAK,UAAU;oBACb,OAAO,GAAG,IAAI,CAAC;oBACf,MAAM;gBACR;oBACE,OAAO,GAAG,KAAK,CAAC,CAAC,2CAA2C;oBAC5D,MAAM;aACT;YACD,IAAI,OAAO,EAAE;gBACX,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACrB;iBAAM;gBACL,QAAQ,CAAC,IAAI,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;aAC1C;YACD,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;;;;;;;;;;;;;ACjDF;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBACN,CAAC,0DAAU;KAC1B,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDividerModule } from '@angular/material/divider';\n\n@NgModule({\n  exports: [\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatDividerModule,\n  ],\n})\nexport class AngularMaterialModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from './guards/auth.guard';\n\nimport { LoginComponent } from './feature-modules/auth/login/login.component';\nimport { SignupComponent } from './feature-modules/auth/signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  {\n    path: '',\n    canLoad: [AuthGuard],\n    loadChildren: () =>\n      import('./feature-modules/posts/posts.module').then((m) => m.PostsModule),\n  },\n  {\n    path: 'profile',\n    canLoad: [AuthGuard],\n    loadChildren: () =>\n      import('./feature-modules/profile/profile.module').then(\n        (m) => m.ProfileModule\n      ),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './feature-modules/auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'Facebook clone';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.checkAuth();\n  }\n}\n","<app-header></app-header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\n\nimport { AuthModule } from './feature-modules/auth/auth.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared-module/shared.module';\nimport { AngularMaterialModule } from './angular-material.module';\n\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\n\n@NgModule({\n  declarations: [AppComponent, HeaderComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularMaterialModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AuthModule,\n    SharedModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorService {\n  error$ = new Subject<HttpErrorResponse>();\n\n  constructor() {}\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styleUrls: ['./auth-form.component.css'],\n})\nexport class AuthFormComponent implements OnInit {\n  @Input() formTitle: string;\n  @Input() errorMessage: string;\n  @Output() formSubmiited = new EventEmitter<any>();\n  form: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.form =\n      this.formTitle === 'Signup'\n        ? this.fb.group({\n            name: ['', [Validators.required]],\n            email: ['', [Validators.required]],\n            password: ['', [Validators.required]],\n          })\n        : this.fb.group({\n            email: ['', [Validators.required]],\n            password: ['', [Validators.required]],\n          });\n  }\n\n  onFormSubmit() {\n    this.form.markAllAsTouched();\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.formSubmiited.emit(this.form.value);\n  }\n}\n","<mat-card>\n  <form [formGroup]=\"form\" (ngSubmit)=\"onFormSubmit()\" #formDirective=\"ngForm\">\n    <mat-card-title>{{ formTitle }}</mat-card-title>\n\n    <app-input\n      *ngIf=\"formTitle === 'Signup'\"\n      [control]=\"form.get('name')\"\n      label=\"Name\"\n    ></app-input>\n\n    <app-input [control]=\"form.get('email')\" label=\"Email\"></app-input>\n\n    <app-input\n      [control]=\"form.get('password')\"\n      type=\"password\"\n      label=\"Password\"\n    ></app-input>\n\n    <mat-error *ngIf=\"errorMessage\">{{ errorMessage }}</mat-error>\n\n    <div class=\"card-actions\">\n      <button color=\"primary\" mat-raised-button type=\"submit\">\n        {{ formTitle }}\n      </button>\n    </div>\n\n    <pre></pre>\n  </form>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AngularMaterialModule } from 'src/app/angular-material.module';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SharedModule } from 'src/app/shared-module/shared.module';\nimport { AuthFormComponent } from './auth-form/auth-form.component';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent, AuthFormComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    SharedModule,\n  ],\n})\nexport class AuthModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nimport { AuthFormValues, User } from 'src/app/interfaces/auth.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private readonly url = '/api/user';\n  private tokenTimer: any;\n  isLoggedIn$ = new BehaviorSubject<boolean>(null);\n  user$ = new BehaviorSubject<User>(null);\n  error$ = new Subject<string>();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  login(credentials: AuthFormValues) {\n    this.http.post<User>(`${this.url}/login`, credentials).subscribe(\n      (user) => {\n        this.isLoggedIn$.next(true);\n        this.user$.next(user);\n        this.error$.next('');\n\n        this.setTokenTimerAndSaveAuthToStorage(\n          user.userToken.expiresIn,\n          user.userToken.token\n        );\n\n        this.router.navigate(['../'], {\n          relativeTo: this.route,\n        });\n      },\n      (error) => {\n        this.error$.next(error.error.message);\n      }\n    );\n  }\n\n  signup(credentials: AuthFormValues) {\n    this.http.post<User>(this.url, credentials).subscribe(\n      (user) => {\n        this.isLoggedIn$.next(true);\n        this.user$.next(user);\n\n        this.setTokenTimerAndSaveAuthToStorage(\n          user.userToken.expiresIn,\n          user.userToken.token\n        );\n\n        this.router.navigate(['../'], {\n          relativeTo: this.route,\n        });\n      },\n      (error) => {\n        this.error$.next(error.error.message);\n      }\n    );\n  }\n\n  getMyProfile() {\n    this.http.get<User>(`${this.url}/me`).subscribe((user) => {\n      this.user$.next(user);\n    });\n  }\n\n  signout() {\n    localStorage.removeItem('userToken');\n\n    this.isLoggedIn$.next(false);\n\n    this.router.navigate(['/login']);\n\n    clearTimeout(this.tokenTimer);\n  }\n\n  checkAuth() {\n    const userToken = JSON.parse(localStorage.getItem('userToken'));\n\n    if (!userToken) {\n      return;\n    }\n\n    const now = new Date();\n    const expiresInMs =\n      new Date(userToken.expirationDate).getTime() - now.getTime();\n\n    if (expiresInMs > 0) {\n      this.isLoggedIn$.next(true);\n      this.setTokenTimer(expiresInMs);\n      this.getMyProfile();\n    } else {\n      this.signout();\n    }\n  }\n\n  setTokenTimerAndSaveAuthToStorage(expiresIn: number, token: string) {\n    const expiresInMs = +expiresIn * 1000;\n    this.setTokenTimer(expiresInMs);\n    this.saveAuthToStorage(token, expiresInMs);\n  }\n\n  private saveAuthToStorage(token: string, expiresIn: number) {\n    const now = new Date();\n    const expiration = new Date(now.getTime() + expiresIn);\n\n    const expirationDate = expiration.toISOString();\n\n    localStorage.setItem(\n      'userToken',\n      JSON.stringify({ token, expirationDate })\n    );\n  }\n\n  private setTokenTimer(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.signout();\n    }, duration);\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  errorMessage: string;\n  errorSub: Subscription;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.errorSub = this.authService.error$.subscribe((errorMessage) => {\n      this.loading = false;\n      this.errorMessage = errorMessage;\n    });\n  }\n\n  login(formValues) {\n    this.loading = true;\n    this.authService.login(formValues);\n  }\n\n  ngOnDestroy() {\n    this.errorSub.unsubscribe();\n  }\n}\n","<app-spinner *ngIf=\"loading\"></app-spinner>\n<app-auth-form\n  [errorMessage]=\"errorMessage\"\n  formTitle=\"Login\"\n  (formSubmiited)=\"login($event)\"\n></app-auth-form>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthFormValues } from 'src/app/interfaces/auth.model';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  errorMessage: string;\n  errorSub: Subscription;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.errorSub = this.authService.error$.subscribe((errorMessage) => {\n      this.loading = false;\n      this.errorMessage = errorMessage;\n    });\n  }\n\n  signup(formValues: AuthFormValues) {\n    this.loading = true;\n\n    this.authService.signup(formValues);\n  }\n\n  ngOnDestroy() {\n    this.errorSub.unsubscribe();\n  }\n}\n","<app-spinner *ngIf=\"loading\"></app-spinner>\n<app-auth-form\n  [errorMessage]=\"errorMessage\"\n  formTitle=\"Signup\"\n  (formSubmiited)=\"signup($event)\"\n></app-auth-form>\n","import { Injectable } from '@angular/core';\nimport {\n  CanLoad,\n  Route,\n  UrlSegment,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take, tap } from 'rxjs/operators';\nimport { AuthService } from '../feature-modules/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanLoad {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.authService.isLoggedIn$.pipe(\n      map((user) => (user ? true : false)),\n      take(1),\n      tap((isLoggedin) => {\n        if (!isLoggedin) {\n          this.router.navigate(['/login']);\n        }\n      })\n    );\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/feature-modules/auth/auth.service';\nimport { User } from 'src/app/interfaces/auth.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  isLoggedIn: boolean;\n  loggedInUser: User;\n  private authSub: Subscription;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.authSub = this.authService.isLoggedIn$.subscribe((isLoggedIn) => {\n      this.isLoggedIn = isLoggedIn;\n    });\n  }\n\n  onSignout() {\n    this.authService.signout();\n  }\n\n  ngOnDestroy() {\n    this.authSub.unsubscribe();\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>\n    <a [routerLink]=\"isLoggedIn ? ['/'] : ['/login']\">Social Media</a>\n  </span>\n  <span class=\"space\"></span>\n  <ul>\n    <ng-container *ngIf=\"isLoggedIn\">\n      <li>\n        <a\n          mat-button\n          [routerLink]=\"['./', 'profile']\"\n          routerLinkActive=\"mat-accent\"\n        >\n          <mat-icon>account_circle</mat-icon>\n        </a>\n      </li>\n      <li>\n        <a\n          mat-button\n          [routerLink]=\"['./']\"\n          routerLinkActive=\"mat-accent\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n        >\n          <mat-icon>home</mat-icon>\n        </a>\n      </li>\n    </ng-container>\n    <ng-container *ngIf=\"!isLoggedIn\">\n      <li>\n        <a\n          mat-button\n          [routerLink]=\"['./login']\"\n          routerLinkActive=\"mat-accent\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n        >\n          Login\n        </a>\n      </li>\n      <li>\n        <a mat-button [routerLink]=\"['./signup']\" routerLinkActive=\"mat-accent\">\n          Signup\n        </a>\n      </li>\n    </ng-container>\n    <li *ngIf=\"isLoggedIn\">\n      <a mat-button (click)=\"onSignout()\">Signout</a>\n    </li>\n  </ul>\n</mat-toolbar>\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const userToken = JSON.parse(localStorage.getItem('userToken'));\n\n    if (userToken) {\n      const modifiedRequest = req.clone({\n        headers: req.headers.append(\n          'Authorization',\n          `Bearer ${userToken.token}`\n        ),\n      });\n      return next.handle(modifiedRequest);\n    }\n\n    return next.handle(req);\n  }\n}\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ErrorService } from '../error.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private errorService: ErrorService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        this.errorService.error$.next(error);\n\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css'],\n})\nexport class ErrorComponent implements OnInit {\n  @Input() errorMessage: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onCloseError() {\n    this.errorMessage = '';\n  }\n}\n","<mat-card *ngIf=\"errorMessage\">\n  <p>Error occurred: {{ errorMessage }}</p>\n  <button align=\"end\" mat-raised-button (click)=\"onCloseError()\">Close</button>\n</mat-card>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.css'],\n})\nexport class InputComponent implements OnInit {\n  @Input() label: string;\n  @Input() control: FormControl;\n  @Input() type = 'text';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-form-field>\n  <input\n    *ngIf=\"type === 'text' || type === 'password'\"\n    matInput\n    [placeholder]=\"label\"\n    [formControl]=\"control\"\n    [type]=\"type\"\n  />\n  <textarea\n    *ngIf=\"type === 'textarea'\"\n    matInput\n    [placeholder]=\"label\"\n    [formControl]=\"control\"\n  ></textarea>\n</mat-form-field>\n\n<mat-error *ngIf=\"control.errors && control.touched\">\n  <ng-container *ngIf=\"control.getError('required')\">\n    {{ label }} is required\n  </ng-container>\n  <ng-container *ngIf=\"control.getError('invalidPassword')\">\n    Incorrect password\n  </ng-container>\n</mat-error>\n<mat-hint *ngIf=\"control.pending\">Validating...</mat-hint>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { User } from 'src/app/interfaces/auth.model';\nimport { Post } from '../../interfaces/post.model';\n\nimport { mimeType } from '../../validators/mime-type.validator';\n\n@Component({\n  selector: 'app-post-form',\n  templateUrl: './post-form.component.html',\n  styleUrls: ['./post-form.component.css'],\n})\nexport class PostFormComponent implements OnInit, OnChanges {\n  @Input() loggedInUser: User;\n  @Input() initialFormValue = {\n    title: '',\n    content: '',\n    image: '',\n  };\n  @Output() formSubmitted = new EventEmitter<Post>();\n\n  form: FormGroup = this.fb.group({\n    title: [this.initialFormValue.title, [Validators.required]],\n    content: [this.initialFormValue.content, [Validators.required]],\n    image: [null, null, [mimeType]],\n  });\n  imagePreview: string;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const propName in changes) {\n      if (changes.hasOwnProperty(propName)) {\n        switch (propName) {\n          case 'initialFormValue':\n            return this.setFormValue();\n        }\n      }\n    }\n  }\n\n  setFormValue() {\n    this.form.patchValue({\n      title: this.initialFormValue.title,\n      content: this.initialFormValue.content,\n      image: this.initialFormValue.image,\n    });\n    this.imagePreview = this.initialFormValue.image;\n  }\n\n  onUploadImage(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    const reader = new FileReader();\n\n    if (file) {\n      this.form.patchValue({ image: file });\n      this.form.get('image').updateValueAndValidity();\n\n      reader.onload = (e) => {\n        this.imagePreview = e.target.result as string;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  onFormSubmit() {\n    this.form.markAllAsTouched();\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    const post: Post = this.form.value;\n\n    this.formSubmitted.emit(post);\n  }\n}\n","<mat-card>\n  <mat-card-header>\n    <img mat-card-avatar [src]=\"loggedInUser.avatar\" />\n    <mat-card-title>{{ loggedInUser.name }}</mat-card-title>\n  </mat-card-header>\n\n  <form [formGroup]=\"form\" (ngSubmit)=\"onFormSubmit()\" #formDirective=\"ngForm\">\n    <app-input [control]=\"form.get('title')\" label=\"Post Title\"></app-input>\n\n    <app-input\n      [control]=\"form.get('content')\"\n      label=\"Post Content\"\n      type=\"textarea\"\n    ></app-input>\n\n    <div class=\"image-preview\" *ngIf=\"imagePreview\">\n      <img [src]=\"imagePreview\" [alt]=\"form.value.title\" />\n    </div>\n\n    <div class=\"post-form-actions\">\n      <button mat-button type=\"button\" (click)=\"fileInput.click()\">\n        <mat-icon color=\"warn\">insert_photo</mat-icon>\n      </button>\n      <input hidden type=\"file\" #fileInput (change)=\"onUploadImage($event)\" />\n      <button\n        color=\"primary\"\n        mat-button\n        type=\"submit\"\n        [disabled]=\"form.invalid\"\n      >\n        Post\n      </button>\n    </div>\n  </form>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { AngularMaterialModule } from '../angular-material.module';\n\nimport { PostFormComponent } from './post-form/post-form.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { ErrorComponent } from './error/error.component';\nimport { UtilButtonsComponent } from './util-buttons/util-buttons.component';\nimport { InputComponent } from './input/input.component';\n\n@NgModule({\n  declarations: [\n    PostFormComponent,\n    SpinnerComponent,\n    ErrorComponent,\n    UtilButtonsComponent,\n    InputComponent,\n  ],\n  imports: [\n    CommonModule,\n    AngularMaterialModule,\n    ReactiveFormsModule,\n    RouterModule,\n  ],\n  exports: [\n    PostFormComponent,\n    ErrorComponent,\n    SpinnerComponent,\n    UtilButtonsComponent,\n    InputComponent,\n  ],\n})\nexport class SharedModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-spinner></mat-spinner>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Post } from 'src/app/interfaces/post.model';\n\n@Component({\n  selector: 'app-util-buttons',\n  templateUrl: './util-buttons.component.html',\n  styleUrls: ['./util-buttons.component.css'],\n})\nexport class UtilButtonsComponent implements OnInit {\n  @Input() post: Post;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<button mat-icon-button [matMenuTriggerFor]=\"more_options\">\n  <mat-icon>more_horiz</mat-icon>\n</button>\n<mat-menu #more_options=\"matMenu\">\n  <ng-content></ng-content>\n</mat-menu>\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { Observable, Observer, of } from 'rxjs';\n\nexport const mimeType = (\n  control: AbstractControl\n): Observable<ValidationErrors> => {\n  if (!control.value || typeof control.value === 'string') {\n    return of(null);\n  }\n\n  const file = control.value as File;\n\n  const fileReader = new FileReader();\n\n  const fileReader$ = new Observable((observer: Observer<ValidationErrors>) => {\n    fileReader.addEventListener('loadend', (e) => {\n      const arr = new Uint8Array(e.target.result as ArrayBuffer).subarray(0, 4);\n      let header = '';\n      let isValid = false;\n\n      for (const i of arr) {\n        header += i.toString(16);\n      }\n\n      switch (header) {\n        case '89504e47':\n          isValid = true;\n          break;\n        case 'ffd8ffe0':\n        case 'ffd8ffe1':\n        case 'ffd8ffe2':\n        case 'ffd8ffe3':\n        case 'ffd8ffe8':\n          isValid = true;\n          break;\n        default:\n          isValid = false; // Or you can use the blob.type as fallback\n          break;\n      }\n      if (isValid) {\n        observer.next(null);\n      } else {\n        observer.next({ invalidMimeType: true });\n      }\n      observer.complete();\n    });\n    fileReader.readAsArrayBuffer(file);\n  });\n  return fileReader$;\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}